"use strict";const e=require("./liqui.js");module.exports=class extends e{describe(){return this.deepExtend(super.describe(),{id:"dsx",name:"DSX",countries:"UK",rateLimit:1500,has:{CORS:!1,fetchOrder:!0,fetchOrders:!0,fetchOpenOrders:!0,fetchClosedOrders:!0,fetchTickers:!0,fetchMyTrades:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27990275-1413158a-645a-11e7-931c-94717f7510e3.jpg",api:{public:"https://dsx.uk/mapi",private:"https://dsx.uk/tapi",dwapi:"https://dsx.uk/dwapi"},www:"https://dsx.uk",doc:["https://api.dsx.uk","https://dsx.uk/api_docs/public","https://dsx.uk/api_docs/private",""]},api:{public:{get:["barsFromMoment/{id}/{period}/{start}","depth/{pair}","info","lastBars/{id}/{period}/{amount}","periodBars/{id}/{period}/{start}/{end}","ticker/{pair}","trades/{pair}"]},private:{post:["getInfo","TransHistory","TradeHistory","OrderHistory","ActiveOrders","Trade","CancelOrder"]},dwapi:{post:["getCryptoDepositAddress","cryptoWithdraw","fiatWithdraw","getTransactionStatus","getTransactions"]}}})}getBaseQuoteFromMarketId(e){let t=e.toUpperCase(),s=t.slice(0,3),r=t.slice(3,6);return[s=this.commonCurrencyCode(s),r=this.commonCurrencyCode(r)]}async fetchBalance(e={}){await this.loadMarkets();let t=(await this.privatePostGetInfo()).return,s={info:t},r=t.funds,i=Object.keys(r);for(let e=0;e<i.length;e++){let a=i[e],o=a.toUpperCase();o=this.commonCurrencyCode(o);let d={free:r[a],used:0,total:t.total[a]};d.used=d.total-d.free,s[o]=d}return this.parseBalance(s)}parseTicker(e,t){let s=1e3*e.updated,r=void 0;t&&(r=t.symbol);let i=this.safeFloat(e,"avg");void 0!==i&&i>0&&(i=1/i);let a=this.safeFloat(e,"last");return{symbol:r,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"buy"),bidVolume:void 0,ask:this.safeFloat(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:i,baseVolume:this.safeFloat(e,"vol"),quoteVolume:this.safeFloat(e,"vol_cur"),info:e}}getOrderIdKey(){return"orderId"}signBodyWithSecret(e){return this.decode(this.hmac(this.encode(e),this.encode(this.secret),"sha512","base64"))}getVersionString(){return""}};
//# sourceMappingURL=dsx.js.map