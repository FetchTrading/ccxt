"use strict";const e=require("@hydro-protocol/sdk").HydroClient,t=require("./base/Exchange");module.exports=class extends t{describe(){return this.deepExtend(super.describe(),{id:"ddex",name:"DDEX",userAgent:void 0,rateLimit:1e3,urls:{logo:"https://cdn.ddex.io/static/media/logo.941784ff.png",api:"https://api.ddex.io",www:"https://ddex.io/",doc:["https://docs.ddex.io"]},has:{createOrder:!1,createMarketOrder:!1,createLimitOrder:!1,fetchBalance:!1,fetchCurrencies:!1,fetchL2OrderBook:!1,fetchMarkets:!0,fetchOHLCV:!1,fetchTicker:!1,fetchTrades:!1,privateAPI:!1}})}ddexAPI(){return this.hydroClient||(this.hydroClient=e.withoutAuth()),this.hydroClient}async fetchOrderBook(e,t,r={}){await this.loadMarkets();const[i,o]=e.split("/"),s=await this.ddexAPI().getOrderbook(`${i}-${o}`),{bids:d,asks:n}=s,a=new Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];a[e]=[t.price.toNumber(),t.amount.toNumber()]}const c=new Array(n.length);for(let e=0;e<n.length;e++){const t=n[e];c[e]=[t.price.toNumber(),t.amount.toNumber()]}const h=new Date;return{timestamp:h.getTime(),datetime:h.toISOString(),nonce:void 0,bids:a,asks:c}}async fetchMarkets(){const e=await this.ddexAPI().listMarkets(),t=e.length,r=new Array(t);for(let i=0;i<t;i++){const t=e[i],{baseToken:o,quoteToken:s}=t;r[i]={id:t.id,symbol:`${s}/${o}`,base:s,quote:o,active:!0,precision:{amount:8},limits:{amount:{min:t.minOrderSize,max:t.maxOrderSize}},info:t}}return r}};
//# sourceMappingURL=ddex.js.map