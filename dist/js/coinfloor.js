"use strict";const e=require("./base/Exchange"),{NotSupported:t}=require("./base/errors");module.exports=class extends e{describe(){return this.deepExtend(super.describe(),{id:"coinfloor",name:"coinfloor",rateLimit:1e3,countries:"UK",has:{CORS:!1,fetchOpenOrders:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/28246081-623fc164-6a1c-11e7-913f-bac0d5576c90.jpg",api:"https://webapi.coinfloor.co.uk:8090/bist",www:"https://www.coinfloor.co.uk",doc:["https://github.com/coinfloor/api","https://www.coinfloor.co.uk/api"]},requiredCredentials:{apiKey:!0,secret:!1,password:!0,uid:!0},api:{public:{get:["{id}/ticker/","{id}/order_book/","{id}/transactions/"]},private:{post:["{id}/balance/","{id}/user_transactions/","{id}/open_orders/","{id}/cancel_order/","{id}/buy/","{id}/sell/","{id}/buy_market/","{id}/sell_market/","{id}/estimate_sell_market/","{id}/estimate_buy_market/"]}},markets:{"BTC/GBP":{id:"XBT/GBP",symbol:"BTC/GBP",base:"BTC",quote:"GBP"},"BTC/EUR":{id:"XBT/EUR",symbol:"BTC/EUR",base:"BTC",quote:"EUR"},"BTC/USD":{id:"XBT/USD",symbol:"BTC/USD",base:"BTC",quote:"USD"},"BTC/PLN":{id:"XBT/PLN",symbol:"BTC/PLN",base:"BTC",quote:"PLN"},"BCH/GBP":{id:"BCH/GBP",symbol:"BCH/GBP",base:"BCH",quote:"GBP"}}})}async fetchBalance(e={}){let i=void 0;if("symbol"in e&&(i=this.findMarket(e.symbol)),"id"in e&&(i=this.findMarket(e.id)),!i)throw new t(this.id+" fetchBalance requires a symbol param");let s=await this.privatePostIdBalance({id:i.id}),a={info:s},r=i.id.toLowerCase().split("/");return a[i.base]={free:parseFloat(s[r[0]+"_available"]),used:parseFloat(s[r[0]+"_reserved"]),total:parseFloat(s[r[0]+"_balance"])},a[i.quote]={free:parseFloat(s[r[1]+"_available"]),used:parseFloat(s[r[1]+"_reserved"]),total:parseFloat(s[r[1]+"_balance"])},this.parseBalance(a)}async fetchOrderBook(e,t,i={}){let s=await this.publicGetIdOrderBook(this.extend({id:this.marketId(e)},i));return this.parseOrderBook(s)}parseTicker(e,t){let i=this.milliseconds(),s=void 0;t&&(s=t.symbol);let a=this.safeFloat(e,"vwap"),r=this.safeFloat(e,"volume"),o=void 0;void 0!==a&&(o=r*a);let d=this.safeFloat(e,"last");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"bid"),bidVolume:void 0,ask:this.safeFloat(e,"ask"),askVolume:void 0,vwap:a,open:void 0,close:d,last:d,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:r,quoteVolume:o,info:e}}async fetchTicker(e,t={}){let i=this.market(e),s=await this.publicGetIdTicker(this.extend({id:i.id},t));return this.parseTicker(s,i)}parseTrade(e,t){let i=1e3*e.date;return{info:e,id:e.tid.toString(),order:void 0,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:void 0,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"amount")}}async fetchTrades(e,t,i,s={}){let a=this.market(e),r=await this.publicGetIdTransactions(this.extend({id:a.id},s));return this.parseTrades(r,a,t,i)}async createOrder(e,t,i,s,a,r={}){let o={id:this.marketId(e)},d="privatePostId"+this.capitalize(i);return"market"===t?(o.quantity=s,d+="Market"):(o.price=a,o.amount=s),this[d](this.extend(o,r))}async cancelOrder(e,t,i={}){return await this.privatePostIdCancelOrder({id:e})}parseOrder(e,t){let i=this.parseDate(e.datetime),s=this.iso8601(i),a=this.safeFloat(e,"price"),r=this.safeFloat(e,"amount"),o=a*r,d=void 0,l=this.safeString(e,"status");0===e.type?d="buy":1===e.type&&(d="sell");let n=void 0;return void 0!==t&&(n=t.symbol),{info:e,id:e.id.toString(),datetime:s,timestamp:i,lastTradeTimestamp:void 0,status:l,symbol:n,type:"limit",side:d,price:a,amount:r,filled:void 0,remaining:void 0,cost:o,fee:void 0}}async fetchOpenOrders(e,i,s,a={}){if(!e)throw new t(this.id+" fetchOpenOrders requires a symbol param");await this.loadMarkets();let r=this.market(e),o=await this.privatePostIdOpenOrders({id:r.id});for(let e=0;e<o.length;e++)o[e]=this.extend(o[e],{status:"open"});return this.parseOrders(o,r,i,s)}sign(e,t="public",i="GET",s={},a,r){let o=this.urls.api+"/"+this.implodeParams(e,s),d=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(d).length&&(o+="?"+this.urlencode(d));else{this.checkRequiredCredentials();let e=this.nonce();r=this.urlencode(this.extend({nonce:e},d));let t=this.uid+"/"+this.apiKey+":"+this.password;a={"Content-Type":"application/x-www-form-urlencoded",Authorization:"Basic "+this.decode(this.stringToBase64(this.encode(t)))}}return{url:o,method:i,body:r,headers:a}}};
//# sourceMappingURL=coinfloor.js.map