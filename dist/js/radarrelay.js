"use strict";const{flatten:e}=require("lodash"),{assetDataUtils:t}=require("0x.js"),{BigNumber:r}=require("@0xproject/utils"),{rateUtils:s,orderParsingUtils:o}=require("@0xproject/order-utils"),{Web3Wrapper:a}=require("@0xproject/web3-wrapper"),i=require("./base/Exchange"),n=require("./base/TokenInfo");module.exports=class d extends i{describe(){return this.deepExtend(super.describe(),{id:"radarrelay",name:"Radar Relay - 0x V2",countries:"USA",version:void 0,userAgent:void 0,rateLimit:500,urls:{logo:"https://radarrelay.com/img/radar-logo-beta.svg",api:"https://api.radarrelay.com/0x/v2",www:"https://radarrelay.com",doc:["https://radarrelay.com/standard-relayer-api/"]},has:{createOrder:!1,createMarketOrder:!1,createLimitOrder:!1,fetchBalance:!1,fetchCurrencies:!1,fetchL2OrderBook:!1,fetchMarkets:!0,fetchOrderBook:!0,fetchTicker:!1,fetchTrades:!1,privateAPI:!1,is0xProtocol:!0,needsEthereumNodeEndpoint:!0,ethIsWeth:!0},api:{public:{get:["asset_pairs","orderbook"]}}})}static decodeTokenInfo(e){const r=t.decodeAssetDataOrThrow(e),{tokenAddress:s}=r;return n.getFromAddress(s)}static encodeTokenInfo(e){const r=n.getFromSymbol(e);return r?t.encodeERC20AssetData(r.address):null}sign(e,t="public",r="GET",s={},o,a){const i=this.url(e,s);return{url:this.urls.api+"/"+i,method:r,body:a,headers:o}}async fetchOrderBook(e,t,i={}){const[c,u]=e.split("/"),l=d.encodeTokenInfo(c),m=d.encodeTokenInfo(u),p=await this.publicGetOrderbook({baseAssetData:l,quoteAssetData:m}),{bids:b,asks:h}=p,f=new r(1),g=n.getFromSymbol(c),k=n.getFromSymbol(u),A=b.records.map(e=>{const t=o.convertOrderStringFieldsToBigNumber(e.order),r=s.getFeeAdjustedRateOfFeeOrder(t),i=g.decimals,n=a.toUnitAmount(t.takerAssetAmount,i);return[f.div(r).toNumber(),n.toNumber(),t]}),y=h.records.map(e=>{const t=o.convertOrderStringFieldsToBigNumber(e.order),r=s.getFeeAdjustedRateOfFeeOrder(t),i=k.decimals,n=a.toUnitAmount(t.makerAssetAmount,i);return[r.toNumber(),n.toNumber(),t]}),O=new Date;return{timestamp:O.getTime(),datetime:O.toISOString(),nonce:void 0,bids:A,asks:y}}async fetchMarkets(){const t=await this.publicGetAssetPairs(),{total:r,perPage:s}=t,o=[],a=Math.ceil(r/s);for(let e=2;e<=a;e++)o.push(this.publicGetAssetPairs({page:e}));const i=await Promise.all(o);i.push(t);const n=e(i.map(e=>e.records)),c=[];for(let e=0,t=n.length;e<t;e++){const t=n[e],{assetDataA:r,assetDataB:s}=t,o=d.decodeTokenInfo(r.assetData),a=d.decodeTokenInfo(s.assetData);if(o&&a){const e=o.symbol,t=a.symbol,i=`${e}/${t}`;c.push({id:i,symbol:i,base:e,quote:t,active:!0,info:{baseInfo:r,quoteInfo:s}});const n=`${t}/${e}`;c.push({id:n,symbol:n,base:t,quote:e,active:!0,info:{baseInfo:s,quoteInfo:r}})}}return this._markets_only=c,c}};
//# sourceMappingURL=radarrelay.js.map