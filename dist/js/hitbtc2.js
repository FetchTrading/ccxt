"use strict";const e=require("./hitbtc"),{ExchangeError:t,ExchangeNotAvailable:i,OrderNotFound:s,InsufficientFunds:r,InvalidOrder:a}=require("./base/errors");module.exports=class extends e{describe(){return this.deepExtend(super.describe(),{id:"hitbtc2",name:"HitBTC v2",countries:"HK",rateLimit:1500,version:"2",has:{createDepositAddress:!0,fetchDepositAddress:!0,CORS:!0,editOrder:!0,fetchCurrencies:!0,fetchOHLCV:!0,fetchTickers:!0,fetchOrder:!0,fetchOrders:!1,fetchOpenOrders:!0,fetchClosedOrders:!0,fetchMyTrades:!0,withdraw:!0},timeframes:{"1m":"M1","3m":"M3","5m":"M5","15m":"M15","30m":"M30","1h":"H1","4h":"H4","1d":"D1","1w":"D7","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766555-8eaec20e-5edc-11e7-9c5b-6dc69fc42f5e.jpg",api:"https://api.hitbtc.com",www:"https://hitbtc.com",referral:"https://hitbtc.com/?ref_id=5a5d39a65d466",doc:"https://api.hitbtc.com",fees:["https://hitbtc.com/fees-and-limits","https://support.hitbtc.com/hc/en-us/articles/115005148605-Fees-and-limits"]},api:{public:{get:["symbol","symbol/{symbol}","currency","currency/{currency}","ticker","ticker/{symbol}","trades/{symbol}","orderbook/{symbol}","candles/{symbol}"]},private:{get:["order","order/{clientOrderId}","trading/balance","trading/fee/{symbol}","history/trades","history/order","history/order/{id}/trades","account/balance","account/transactions","account/transactions/{id}","account/crypto/address/{currency}"],post:["order","account/crypto/withdraw","account/crypto/address/{currency}","account/transfer"],put:["order/{clientOrderId}","account/crypto/withdraw/{id}"],delete:["order","order/{clientOrderId}","account/crypto/withdraw/{id}"],patch:["order/{clientOrderId}"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:-1e-4,taker:.001},funding:{tierBased:!1,percentage:!1,withdraw:{BTC:.001,BCC:.0018,ETH:.00958,BCH:.0018,USDT:100,DASH:.03,BTG:5e-4,XRP:.509,LTC:.003,ZEC:1e-4,XMR:.09,"1ST":.84,ADX:5.7,AE:6.7,AEON:.01006,AIR:565,AMM:14,AMP:342,ANT:6.7,ARDR:1,ARN:18.5,ART:26,ATB:4e-4,ATL:27,ATM:504,ATS:860,AVT:1.9,BAS:113,BCN:.1,BET:124,BKB:46,BMC:32,BMT:100,BNT:2.57,BQX:4.7,BTCA:351.21,BTM:40,BTX:.04,BUS:.004,CAPP:97,CCT:6,CDT:100,CDX:30,CFI:61,CL:13.85,CLD:.88,CND:574,CNX:.04,COSS:65,CPAY:5.487,CSNO:16,CTR:15,CTX:146,CVC:8.46,DATA:12.949,DBIX:.0168,DCN:1280,DCT:.02,DDF:342,DENT:1e3,DGB:.4,DGD:.01,DICE:.32,DLT:.26,DNT:.21,DOGE:2,DOV:34,DRPU:24,DRT:240,DSH:.017,EBET:84,EBTC:20,EBTCOLD:6.6,ECAT:14,EDG:2,EDO:2.9,EKO:1136.36,ELE:.00172,ELM:.004,EMC:.03,MGO:14,ENJ:163,EOS:1.5,ERO:34,ETBS:15,ETC:.002,ETP:.004,EVX:5.4,EXN:456,FCN:5e-6,FRD:65,FUEL:123.00105,FUN:202.9598309,FYN:1.849,FYP:66.13,GAME:.004,GNO:.0034,GUP:4,GVT:1.2,HSR:.04,HAC:144,HDG:7,HGT:1082,HPC:.4,HVN:120,ICN:.55,ICO:34,ICOS:.35,IND:76,INDI:790,ITS:15.0012,IXT:11,KBR:143,KICK:112,KMD:4,LA:41,LEND:388,LAT:1.44,LIFE:13e3,LRC:27,LSK:.3,LOC:11.076,LUN:.34,MAID:5,MANA:143,MCAP:5.44,MIPS:43,MNE:1.33,MSP:121,MCO:.357,MTH:92,MYB:3.9,NDC:165,NEBL:.04,NET:3.96,NTO:998,NGC:2.368,NXC:13.39,NXT:3,OAX:15,ODN:.004,OMG:2,OPT:335,ORME:2.8,OTN:.57,PAY:3.1,PIX:96,PLBT:.33,PLR:114,PLU:.87,POE:784,POLL:3.5,PPT:2,PRE:32,PRG:39,PRO:41,PRS:60,PTOY:.5,QAU:63,QCN:.03,QTUM:.04,QVT:64,REP:.02,RKC:15,RLC:1.21,RVT:14,SC:30,SAN:2.24,SBD:.03,SCL:2.6,SISA:1640,SKIN:407,SWFTC:352.94,SMART:.4,SMS:.0375,SNC:36,SNGLS:4,SNM:48,SNT:233,STAR:.144,STORM:153.19,STEEM:.01,STRAT:.01,SPF:14.4,STU:14,STX:11,SUB:17,SUR:3,SWT:.51,TAAS:.91,TBT:2.37,TFL:15,TIME:.03,TIX:7.1,TKN:1,TGT:173,TKR:84,TNT:90,TRST:1.6,TRX:270,UET:480,UGT:15,UTT:3,VEN:14,VERI:.037,VIB:50,VIBE:145,VOISE:618,WEALTH:.0168,WINGS:2.4,WTC:.75,WRC:48,XAUR:3.23,XDN:.01,XEM:15,XUC:.9,YOYOW:140,ZAP:24,ZRX:23,ZSC:191},deposit:{BTC:6e-4,ETH:.003,BCH:0,USDT:0,BTG:0,LTC:0,ZEC:0,XMR:0,"1ST":0,ADX:0,AE:0,AEON:0,AIR:0,AMP:0,ANT:0,ARDR:0,ARN:0,ART:0,ATB:0,ATL:0,ATM:0,ATS:0,AVT:0,BAS:0,BCN:0,BET:0,BKB:0,BMC:0,BMT:0,BNT:0,BQX:0,BTM:0,BTX:0,BUS:0,CCT:0,CDT:0,CDX:0,CFI:0,CLD:0,CND:0,CNX:0,COSS:0,CSNO:0,CTR:0,CTX:0,CVC:0,DBIX:0,DCN:0,DCT:0,DDF:0,DENT:0,DGB:0,DGD:0,DICE:0,DLT:0,DNT:0,DOGE:0,DOV:0,DRPU:0,DRT:0,DSH:0,EBET:0,EBTC:0,EBTCOLD:0,ECAT:0,EDG:0,EDO:0,ELE:0,ELM:0,EMC:0,EMGO:0,ENJ:0,EOS:0,ERO:0,ETBS:0,ETC:0,ETP:0,EVX:0,EXN:0,FRD:0,FUEL:0,FUN:0,FYN:0,FYP:0,GNO:0,GUP:0,GVT:0,HAC:0,HDG:0,HGT:0,HPC:0,HVN:0,ICN:0,ICO:0,ICOS:0,IND:0,INDI:0,ITS:0,IXT:0,KBR:0,KICK:0,LA:0,LAT:0,LIFE:0,LRC:0,LSK:0,LUN:0,MAID:0,MANA:0,MCAP:0,MIPS:0,MNE:0,MSP:0,MTH:0,MYB:0,NDC:0,NEBL:0,NET:0,NTO:0,NXC:0,NXT:0,OAX:0,ODN:0,OMG:0,OPT:0,ORME:0,OTN:0,PAY:0,PIX:0,PLBT:0,PLR:0,PLU:0,POE:0,POLL:0,PPT:0,PRE:0,PRG:0,PRO:0,PRS:0,PTOY:0,QAU:0,QCN:0,QTUM:0,QVT:0,REP:0,RKC:0,RVT:0,SAN:0,SBD:0,SCL:0,SISA:0,SKIN:0,SMART:0,SMS:0,SNC:0,SNGLS:0,SNM:0,SNT:0,STEEM:0,STRAT:0,STU:0,STX:0,SUB:0,SUR:0,SWT:0,TAAS:0,TBT:0,TFL:0,TIME:0,TIX:0,TKN:0,TKR:0,TNT:0,TRST:0,TRX:0,UET:0,UGT:0,VEN:0,VERI:0,VIB:0,VIBE:0,VOISE:0,WEALTH:0,WINGS:0,WTC:0,XAUR:0,XDN:0,XEM:0,XUC:0,YOYOW:0,ZAP:0,ZRX:0,ZSC:0}}},options:{defaultTimeInForce:"FOK"},exceptions:{2010:a,2011:a,2020:a,20002:s,20001:r}})}feeToPrecision(e,t){return this.truncate(t,8)}async fetchMarkets(){let e=await this.publicGetSymbol(),t=[];for(let i=0;i<e.length;i++){let s=e[i],r=s.id,a=s.baseCurrency,o=s.quoteCurrency,d=this.commonCurrencyCode(a),n=this.commonCurrencyCode(o),c=d+"/"+n,h=this.safeFloat(s,"quantityIncrement"),l=this.safeFloat(s,"tickSize"),T={price:this.precisionFromString(s.tickSize),amount:-1*Math.log10(h)},p=this.safeFloat(s,"takeLiquidityRate"),u=this.safeFloat(s,"provideLiquidityRate");t.push(this.extend(this.fees.trading,{info:s,id:r,symbol:c,base:d,quote:n,baseId:a,quoteId:o,active:!0,taker:p,maker:u,precision:T,limits:{amount:{min:h,max:void 0},price:{min:l,max:void 0},cost:{min:h*l,max:void 0}}}))}return t}async fetchCurrencies(e={}){let t=await this.publicGetCurrency(e),i={};for(let e=0;e<t.length;e++){let s=t[e],r=s.id,a=8,o=this.commonCurrencyCode(r),d=this.safeValue(s,"payinEnabled"),n=this.safeValue(s,"payoutEnabled"),c=this.safeValue(s,"transferEnabled"),h=d&&n&&c,l="ok";"disabled"in s&&s.disabled&&(l="disabled");let T="fiat";"crypto"in s&&s.crypto&&(T="crypto"),i[o]={id:r,code:o,type:T,payin:d,payout:n,transfer:c,info:s,name:s.fullName,active:h,status:l,fee:this.safeFloat(s,"payoutFee"),precision:a,limits:{amount:{min:Math.pow(10,-a),max:Math.pow(10,a)},price:{min:Math.pow(10,-a),max:Math.pow(10,a)},cost:{min:void 0,max:void 0},withdraw:{min:void 0,max:Math.pow(10,a)}}}}return i}async fetchBalance(e={}){await this.loadMarkets();let t=this.safeString(e,"type","trading"),i="privateGet"+this.capitalize(t)+"Balance",s=await this[i](),r={info:s};for(let e=0;e<s.length;e++){let t=s[e],i=t.currency,a=this.commonCurrencyCode(i),o={free:parseFloat(t.available),used:parseFloat(t.reserved),total:0};o.total=this.sum(o.free,o.used),r[a]=o}return this.parseBalance(r)}parseOHLCV(e,t,i="1d",s,r){return[this.parse8601(e.timestamp),parseFloat(e.open),parseFloat(e.max),parseFloat(e.min),parseFloat(e.close),parseFloat(e.volume)]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),o={symbol:a.id,period:this.timeframes[t]};void 0!==s&&(o.limit=s);let d=await this.publicGetCandlesSymbol(this.extend(o,r));return this.parseOHLCVs(d,a,t,i,s)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={symbol:this.marketId(e)};void 0!==t&&(s.limit=t);let r=await this.publicGetOrderbookSymbol(this.extend(s,i));return this.parseOrderBook(r,void 0,"bid","ask","price","size")}parseTicker(e,t){let i=this.parse8601(e.timestamp),s=void 0;t&&(s=t.symbol);let r=this.safeFloat(e,"volume"),a=this.safeFloat(e,"volumeQuote"),o=this.safeFloat(e,"open"),d=this.safeFloat(e,"last"),n=void 0,c=void 0,h=void 0;void 0!==d&&void 0!==o&&(n=d-o,h=this.sum(d,o)/2,o>0&&(c=n/o*100));let l=void 0;return void 0!==a&&void 0!==r&&r>0&&(l=a/r),{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"bid"),bidVolume:void 0,ask:this.safeFloat(e,"ask"),askVolume:void 0,vwap:l,open:o,close:d,last:d,previousClose:void 0,change:n,percentage:c,average:h,baseVolume:r,quoteVolume:a,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTicker(t),s={};for(let e=0;e<i.length;e++){let t=i[e],r=t.symbol,a=this.markets_by_id[r];s[a.symbol]=this.parseTicker(t,a)}return s}async fetchTicker(e,i={}){await this.loadMarkets();let s=this.market(e),r=await this.publicGetTickerSymbol(this.extend({symbol:s.id},i));if("message"in r)throw new t(this.id+" "+r.message);return this.parseTicker(r,s)}parseTrade(e,t){let i=this.parse8601(e.timestamp),s=void 0;if(t)s=t.symbol;else{let i=e.symbol;s=i in this.markets_by_id?(t=this.markets_by_id[i]).symbol:i}let r=void 0;if("fee"in e){let i=t?t.quote:void 0;r={cost:this.safeFloat(e,"fee"),currency:i}}let a=void 0;"clientOrderId"in e&&(a=e.clientOrderId);let o=this.safeFloat(e,"price"),d=this.safeFloat(e,"quantity"),n=o*d;return{info:e,id:e.id.toString(),order:a,timestamp:i,datetime:this.iso8601(i),symbol:s,type:void 0,side:e.side,price:o,amount:d,cost:n,fee:r}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetTradesSymbol(this.extend({symbol:r.id},s));return this.parseTrades(a,r,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),d=this.uuid().split("-").join("");d=d.slice(0,32),s=parseFloat(s);let n={clientOrderId:d,symbol:o.id,side:i,quantity:this.amountToPrecision(e,s),type:t};"limit"===t?n.price=this.priceToPrecision(e,r):n.timeInForce=this.options.defaultTimeInForce;let c=await this.privatePostOrder(this.extend(n,a)),h=this.parseOrder(c),l=h.id;return this.orders[l]=h,h}async editOrder(e,t,i,s,r,a,o={}){await this.loadMarkets();let d=this.uuid().split("-").join(""),n={clientOrderId:e,requestClientId:d=d.slice(0,32)};void 0!==r&&(n.quantity=this.amountToPrecision(t,parseFloat(r))),void 0!==a&&(n.price=this.priceToPrecision(t,a));let c=await this.privatePatchOrderClientOrderId(this.extend(n,o)),h=this.parseOrder(c);return this.orders[h.id]=h,h}async cancelOrder(e,t,i={}){await this.loadMarkets();const s=await this.privateDeleteOrderClientOrderId(this.extend({clientOrderId:e},i));return this.parseOrder(s)}parseOrder(e,t){let i=void 0;"createdAt"in e&&(i=this.parse8601(e.createdAt));let s=void 0;"updatedAt"in e&&(s=this.parse8601(e.updatedAt)),t||(t=this.markets_by_id[e.symbol]);let r=t.symbol,a=this.safeFloat(e,"quantity"),o=this.safeFloat(e,"cumQuantity"),d=e.status;"new"===d?d="open":"suspended"===d?d="open":"partiallyFilled"===d?d="open":"filled"===d&&(d="closed");let n=e.clientOrderId.toString(),c=this.safeFloat(e,"price");void 0===c&&n in this.orders&&(c=this.orders[n].price);let h=void 0,l=void 0;return void 0!==a&&void 0!==o&&(h=a-o,void 0!==c&&(l=o*c)),{id:n,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:s,status:d,symbol:r,type:e.type,side:e.side,price:c,amount:a,cost:l,filled:o,remaining:h,fee:void 0,info:e}}async fetchOrder(e,t,i={}){await this.loadMarkets();let r=await this.privateGetHistoryOrder(this.extend({clientOrderId:e},i));if(r.length>0)return this.parseOrder(r[0]);throw new s(this.id+" order "+e+" not found")}async fetchOpenOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetOrderClientOrderId(this.extend({clientOrderId:e},i));return this.parseOrder(s)}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r=void 0,a={};e&&(r=this.market(e),a.symbol=r.id);let o=await this.privateGetOrder(this.extend(a,s));return this.parseOrders(o,r,t,i)}async fetchClosedOrders(e,t,i,s={}){await this.loadMarkets();let r=void 0,a={};e&&(r=this.market(e),a.symbol=r.id),void 0!==i&&(a.limit=i),void 0!==t&&(a.from=this.iso8601(t));let o=await this.privateGetHistoryOrder(this.extend(a,s)),d=this.parseOrders(o,r);return d=this.filterBy(d,"status","closed"),this.filterBySinceLimit(d,t,i)}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets();let r={},a=void 0;e&&(a=this.market(e),r.symbol=a.id),void 0!==t&&(r.from=this.iso8601(t)),void 0!==i&&(r.limit=i);let o=await this.privateGetHistoryTrades(this.extend(r,s));return this.parseTrades(o,a,t,i)}async fetchOrderTrades(e,t,i,r,a={}){await this.loadMarkets();let o=void 0;void 0!==t&&(o=this.market(t));let d=await this.privateGetHistoryOrderIdTrades(this.extend({id:e},a));if(d.length>0)return this.parseTrades(d,o,i,r);throw new s(this.id+" order "+e+" not found, "+this.id+'.fetchOrderTrades() requires an exchange-specific order id, you need to grab it from order["info"]["id"]')}async createDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=await this.privatePostAccountCryptoAddressCurrency({currency:i.id}),r=s.address;return this.checkAddress(r),{currency:i,address:r,tag:this.safeString(s,"paymentId"),status:"ok",info:s}}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=await this.privateGetAccountCryptoAddressCurrency({currency:i.id}),r=s.address;this.checkAddress(r);let a=this.safeString(s,"paymentId");return{currency:i.code,address:r,tag:a,status:"ok",info:s}}async withdraw(e,t,i,s,r={}){this.checkAddress(i);let a={currency:this.currency(e).id,amount:parseFloat(t),address:i};s&&(a.paymentId=s);let o=await this.privatePostAccountCryptoWithdraw(this.extend(a,r));return{info:o,id:o.id}}sign(e,t="public",i="GET",s={},r,a){let o="/api/"+this.version+"/",d=this.omit(s,this.extractParams(e));if("public"===t)o+=t+"/"+this.implodeParams(e,s),Object.keys(d).length&&(o+="?"+this.urlencode(d));else{this.checkRequiredCredentials(),o+=this.implodeParams(e,s),"GET"===i?Object.keys(d).length&&(o+="?"+this.urlencode(d)):Object.keys(d).length&&(a=this.json(d));let t=this.encode(this.apiKey+":"+this.secret),n=this.stringToBase64(t);r={Authorization:"Basic "+this.decode(n),"Content-Type":"application/json"}}return{url:o=this.urls.api+o,method:i,body:a,headers:r}}handleErrors(e,s,r,o,d,n){if("string"==typeof n&&e>=400){const s=this.id+" "+n;if(503===e||504===e)throw new i(s);if("{"===n[0]){const e=JSON.parse(n);if("error"in e){const t=this.safeString(e.error,"code"),i=this.exceptions;if(t in i)throw new i[t](s);if("Duplicate clientOrderId"===this.safeString(e.error,"message"))throw new a(s)}}throw new t(s)}}};
//# sourceMappingURL=hitbtc2.js.map