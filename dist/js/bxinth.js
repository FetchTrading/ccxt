"use strict";const e=require("./base/Exchange"),{ExchangeError:t}=require("./base/errors");module.exports=class extends e{describe(){return this.deepExtend(super.describe(),{id:"bxinth",name:"BX.in.th",countries:"TH",rateLimit:1500,has:{CORS:!1,fetchTickers:!0,fetchOpenOrders:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766412-567b1eb4-5ed7-11e7-94a8-ff6a3884f6c5.jpg",api:"https://bx.in.th/api",www:"https://bx.in.th",doc:"https://bx.in.th/info/api"},api:{public:{get:["","options","optionbook","orderbook","pairing","trade","tradehistory"]},private:{post:["balance","biller","billgroup","billpay","cancel","deposit","getorders","history","option-issue","option-bid","option-sell","option-myissue","option-mybid","option-myoptions","option-exercise","option-cancel","option-history","order","withdrawal","withdrawal-history"]}},fees:{trading:{taker:.0025,maker:.0025}},commonCurrencies:{DAS:"DASH",DOG:"DOGE"}})}async fetchMarkets(){let e=await this.publicGetPairing(),t=Object.keys(e),i=[];for(let s=0;s<t.length;s++){let r=e[t[s]],a=r.pairing_id.toString(),o=r.secondary_currency,n=r.primary_currency,d=(o=this.commonCurrencyCode(o))+"/"+(n=this.commonCurrencyCode(n));i.push({id:a,symbol:d,base:o,quote:n,info:r})}return i}async fetchBalance(e={}){await this.loadMarkets();let t=(await this.privatePostBalance()).balance,i={info:t},s=Object.keys(t);for(let e=0;e<s.length;e++){let r=s[e],a=this.commonCurrencyCode(r),o={free:parseFloat(t[r].available),used:0,total:parseFloat(t[r].total)};o.used=o.total-o.free,i[a]=o}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetOrderbook(this.extend({pairing:this.marketId(e)},i));return this.parseOrderBook(s)}parseTicker(e,t){let i=this.milliseconds(),s=void 0;t&&(s=t.symbol);let r=this.safeFloat(e,"last_price");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:void 0,low:void 0,bid:parseFloat(e.orderbook.bids.highbid),bidVolume:void 0,ask:parseFloat(e.orderbook.asks.highbid),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:this.safeFloat(e,"change"),percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"volume_24hours"),quoteVolume:void 0,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGet(t),s={},r=Object.keys(i);for(let e=0;e<r.length;e++){let t=r[e],a=i[t],o=this.markets_by_id[t];s[o.symbol]=this.parseTicker(a,o)}return s}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=(await this.publicGet(this.extend({pairing:i.id},t)))[i.id.toString()];return this.parseTicker(s,i)}parseTrade(e,t){let i=this.parse8601(e.trade_date);return{id:e.trade_id,info:e,order:e.order_id,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:e.trade_type,price:this.safeFloat(e,"rate"),amount:this.safeFloat(e,"amount")}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetTrade(this.extend({pairing:r.id},s));return this.parseTrades(a.trades,r,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=await this.privatePostOrder(this.extend({pairing:this.marketId(e),type:i,amount:s,rate:r},a));return{info:o,id:o.order_id.toString()}}async cancelOrder(e,t,i={}){await this.loadMarkets();return await this.privatePostCancel({order_id:e,pairing:void 0})}async parseOrder(e,t){let i=this.safeString(e,"order_type"),s=void 0;if(void 0===t){let i=this.safeString(e,"pairing_id");void 0!==i&&i in this.markets_by_id&&(t=this.markets_by_id[i])}void 0!==t&&(s=t.symbol);let r=this.parse8601(e.date),a=this.safeFloat(e,"rate"),o=this.safeFloat(e,"amount");return{info:e,id:e.order_id,timestamp:r,datetime:this.iso8601(r),symbol:s,type:"limit",side:i,price:a,amount:o}}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r={},a=void 0;void 0!==e&&(a=this.market(e),r.pairing=a.id);let o=this.privatePostGetorders(this.extend(r,s)),n=this.parseOrders(o.orders,a,t,i);return this.filterBySymbol(n,e)}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/";if(e&&(o+=e+"/"),Object.keys(s).length&&(o+="?"+this.urlencode(s)),"private"===t){this.checkRequiredCredentials();let e=this.nonce(),t=this.apiKey+e.toString()+this.secret,i=this.hash(this.encode(t),"sha256");a=this.urlencode(this.extend({key:this.apiKey,nonce:e,signature:i},s)),r={"Content-Type":"application/x-www-form-urlencoded"}}return{url:o,method:i,body:a,headers:r}}async request(e,i="public",s="GET",r={},a,o){let n=await this.fetch2(e,i,s,r,a,o);if("public"===i)return n;if("success"in n&&n.success)return n;throw new t(this.id+" "+this.json(n))}};
//# sourceMappingURL=bxinth.js.map