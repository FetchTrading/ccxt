"use strict";const{isObject:e,isNumber:r,isDictionary:t,isArray:o}=require("./type"),n=Object.keys,s=e=>o(e)?e:Object.values(e),i=e=>new Set(s(e)),f=(...e)=>Object.assign({},...e),u=e=>o(e)?Array.from(e):f(e);module.exports={keys:n,values:s,extend:f,clone:u,index:i,ordered:e=>e,unique:e=>Array.from(i(e)),inArray:(e,r)=>r.includes(e),toArray:e=>Object.values(e),keysort(e,r={}){for(const t of n(e).sort())r[t]=e[t];return r},indexBy(e,r,t={}){for(const o of s(e))r in o&&(t[o[r]]=o);return t},groupBy(e,r,t={}){for(const o of s(e))if(r in o){const e=o[r];t[e]=t[e]||[],t[e].push(o)}return t},filterBy(e,r,t,o=[]){for(const n of s(e))n[r]===t&&o.push(n);return o},sortBy:(e,r,t=!1,o=(t?-1:1))=>e.sort((e,t)=>e[r]<t[r]?-o:e[r]>t[r]?o:0),flatten:function e(r,t=[]){for(const n of r)o(n)?e(n,t):t.push(n);return t},pluck:(e,r)=>s(e).filter(e=>r in e).map(e=>e[r]),omit(e,...r){const t=u(e);for(const e of r)if(o(e))for(const r of e)delete t[r];else delete t[e];return t},sum(...e){const t=e.filter(r);return t.length>0?t.reduce((e,r)=>e+r,0):void 0},deepExtend:function r(...o){let n=void 0;for(const s of o)if(t(s)){e(n)||(n={});for(const e in s)n[e]=r(n[e],s[e])}else n=s;return n}};
//# sourceMappingURL=generic.js.map