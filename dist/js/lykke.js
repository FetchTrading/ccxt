"use strict";const e=require("./base/Exchange");module.exports=class extends e{describe(){return this.deepExtend(super.describe(),{id:"lykke",name:"Lykke",countries:"CH",version:"v1",rateLimit:200,has:{CORS:!1,fetchOHLCV:!1,fetchTrades:!1,fetchOpenOrders:!0,fetchClosedOrders:!0,fetchOrder:!0,fetchOrders:!0},requiredCredentials:{apiKey:!0,secret:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/34487620-3139a7b0-efe6-11e7-90f5-e520cef74451.jpg",api:{mobile:"https://public-api.lykke.com/api",public:"https://hft-api.lykke.com/api",private:"https://hft-api.lykke.com/api",test:{mobile:"https://public-api.lykke.com/api",public:"https://hft-service-dev.lykkex.net/api",private:"https://hft-service-dev.lykkex.net/api"}},www:"https://www.lykke.com",doc:["https://hft-api.lykke.com/swagger/ui/","https://www.lykke.com/lykke_api"],fees:"https://www.lykke.com/trading-conditions"},api:{mobile:{get:["Market/{market}"]},public:{get:["AssetPairs","AssetPairs/{id}","IsAlive","OrderBooks","OrderBooks/{AssetPairId}"]},private:{get:["Orders","Orders/{id}","Wallets"],post:["Orders/limit","Orders/market","Orders/{id}/Cancel"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:0,taker:0},funding:{tierBased:!1,percentage:!1,withdraw:{BTC:.001},deposit:{BTC:0}}}})}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetWallets(),s={info:t};for(let e=0;e<t.length;e++){let i=t[e],a=i.AssetId,r=i.Balance,d=i.Reserved,o=r-d;s[a]={free:o,used:d,total:r}}return this.parseBalance(s)}async cancelOrder(e,t,s={}){return await this.privatePostOrdersIdCancel({id:e})}async createOrder(e,t,s,i,a,r={}){await this.loadMarkets();let d=this.market(e),o={AssetPairId:d.id,OrderAction:this.capitalize(s),Volume:i};"market"===t?o.Asset="buy"===s?d.base:d.quote:"limit"===t&&(o.Price=a);let l="privatePostOrders"+this.capitalize(t);return{id:void 0,info:await this[l](this.extend(o,r))}}async fetchMarkets(){let e=await this.publicGetAssetPairs(),t=[];for(let s=0;s<e.length;s++){let i=e[s],a=i.Id,r=i.BaseAssetId,d=i.QuotingAssetId;r=this.commonCurrencyCode(r),d=this.commonCurrencyCode(d);let o=i.Name,l={amount:i.Accuracy,price:i.InvertedAccuracy};t.push({id:a,symbol:o,base:r,quote:d,active:!0,info:i,lot:Math.pow(10,-l.amount),precision:l,limits:{amount:{min:Math.pow(10,-l.amount),max:Math.pow(10,l.amount)},price:{min:Math.pow(10,-l.price),max:Math.pow(10,l.price)}}})}return t}parseTicker(e,t){let s=this.milliseconds(),i=void 0;t&&(i=t.symbol);let a=parseFloat(e.lastPrice);return{symbol:i,timestamp:s,datetime:this.iso8601(s),high:void 0,low:void 0,bid:parseFloat(e.bid),bidVolume:void 0,ask:parseFloat(e.ask),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:parseFloat(e.volume24H),quoteVolume:void 0,info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let s=this.market(e),i=await this.mobileGetMarketMarket(this.extend({market:s.id},t));return this.parseTicker(i,s)}parseOrderStatus(e){return"Pending"===e?"open":"InOrderBook"===e?"open":"Processing"===e?"open":"Matched"===e?"closed":"Cancelled"===e?"canceled":"NotEnoughFunds"===e?"NotEnoughFunds":"NoLiquidity"===e?"NoLiquidity":"UnknownAsset"===e?"UnknownAsset":"LeadToNegativeSpread"===e?"LeadToNegativeSpread":e}parseOrder(e,t){let s=this.parseOrderStatus(e.Status),i=void 0;t||"AssetPairId"in e&&e.AssetPairId in this.markets_by_id&&(t=this.markets_by_id[e.AssetPairId]),t&&(i=t.symbol);let a=void 0;"LastMatchTime"in e&&e.LastMatchTime?a=this.parse8601(e.LastMatchTime):"Registered"in e&&e.Registered?a=this.parse8601(e.Registered):"CreatedAt"in e&&e.CreatedAt&&(a=this.parse8601(e.CreatedAt));let r=this.safeFloat(e,"Price"),d=this.safeFloat(e,"Volume"),o=this.safeFloat(e,"RemainingVolume"),l=d-o,n=l*r;return{info:e,id:e.Id,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,symbol:i,type:void 0,side:void 0,price:r,cost:n,average:void 0,amount:d,filled:l,remaining:o,status:s,fee:void 0}}async fetchOrder(e,t,s={}){await this.loadMarkets();let i=await this.privateGetOrdersId(this.extend({id:e},s));return this.parseOrder(i)}async fetchOrders(e,t,s,i={}){await this.loadMarkets();let a=await this.privateGetOrders();return this.parseOrders(a,void 0,t,s)}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets();let a=await this.privateGetOrders(this.extend({status:"InOrderBook"},i));return this.parseOrders(a,void 0,t,s)}async fetchClosedOrders(e,t,s,i={}){await this.loadMarkets();let a=await this.privateGetOrders(this.extend({status:"Matched"},i));return this.parseOrders(a,void 0,t,s)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();let i=await this.publicGetOrderBooksAssetPairId(this.extend({AssetPairId:this.marketId(e)},s)),a={timestamp:void 0,bids:[],asks:[]},r=void 0;for(let e=0;e<i.length;e++){let t=i[e];t.IsBuy?a.bids=this.arrayConcat(a.bids,t.Prices):a.asks=this.arrayConcat(a.asks,t.Prices);let s=this.parse8601(t.Timestamp);r=void 0===r?s:Math.max(r,s)}return this.parseOrderBook(a,r,"bids","asks","Price","Volume")}parseBidAsk(e,t=0,s=1){let i=parseFloat(e[t]),a=parseFloat(e[s]);return a<0&&(a=-a),[i,a]}sign(e,t="public",s="GET",i={},a,r){let d=this.urls.api[t]+"/"+this.implodeParams(e,i),o=this.omit(i,this.extractParams(e));return"public"===t?Object.keys(o).length&&(d+="?"+this.urlencode(o)):"private"===t&&("GET"===s&&Object.keys(o).length&&(d+="?"+this.urlencode(o)),this.checkRequiredCredentials(),a={"api-key":this.apiKey,Accept:"application/json","Content-Type":"application/json"},"POST"===s&&Object.keys(i).length&&(r=this.json(i))),{url:d,method:s,body:r,headers:a}}};
//# sourceMappingURL=lykke.js.map