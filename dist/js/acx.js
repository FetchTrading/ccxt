"use strict";const e=require("./base/Exchange"),{InsufficientFunds:t,OrderNotFound:s}=require("./base/errors");module.exports=class extends e{describe(){return this.deepExtend(super.describe(),{id:"acx",name:"ACX",countries:"AU",rateLimit:1e3,version:"v2",has:{CORS:!0,fetchTickers:!0,fetchOHLCV:!0,withdraw:!0,fetchOrder:!0},timeframes:{"1m":"1","5m":"5","15m":"15","30m":"30","1h":"60","2h":"120","4h":"240","12h":"720","1d":"1440","3d":"4320","1w":"10080"},urls:{logo:"https://user-images.githubusercontent.com/1294454/30247614-1fe61c74-9621-11e7-9e8c-f1a627afa279.jpg",extension:".json",api:"https://acx.io/api",www:"https://acx.io",doc:"https://acx.io/documents/api_v2"},api:{public:{get:["depth","k_with_pending_trades","k","markets","order_book","order_book/{market}","tickers","tickers/{market}","timestamp","trades","trades/{market}"]},private:{get:["members/me","deposits","deposit","deposit_address","orders","order","trades/my","withdraws","withdraw"],post:["orders","orders/multi","orders/clear","order/delete","withdraw"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:.002,taker:.002},funding:{tierBased:!1,percentage:!0,withdraw:{}}},exceptions:{2002:t,2003:s}})}async fetchMarkets(){let e=await this.publicGetMarkets(),t=[];for(let s=0;s<e.length;s++){let i=e[s],r=i.id,a=i.name,[o,d]=a.split("/");o=this.commonCurrencyCode(o),d=this.commonCurrencyCode(d),t.push({id:r,symbol:a,base:o,quote:d,info:i})}return t}async fetchBalance(e={}){await this.loadMarkets();let t=(await this.privateGetMembersMe()).accounts,s={info:t};for(let e=0;e<t.length;e++){let i=t[e],r=i.currency.toUpperCase(),a={free:parseFloat(i.balance),used:parseFloat(i.locked),total:0};a.total=this.sum(a.free,a.used),s[r]=a}return this.parseBalance(s)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();let i={market:this.market(e).id};void 0!==t&&(i.limit=t);let r=await this.publicGetDepth(this.extend(i,s)),a=1e3*r.timestamp;return this.parseOrderBook(r,a)}parseTicker(e,t){let s=1e3*e.at;e=e.ticker;let i=void 0;t&&(i=t.symbol);let r=this.safeFloat(e,"last");return{symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"buy"),bidVolume:void 0,ask:this.safeFloat(e,"sell"),askVolume:void 0,vwap:void 0,open:this.safeFloat(e,"open"),close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"vol"),quoteVolume:void 0,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let s=await this.publicGetTickers(t),i=Object.keys(s),r={};for(let e=0;e<i.length;e++){let t=i[e],a=void 0,o=t;if(t in this.markets_by_id)o=(a=this.markets_by_id[t]).symbol;else{let e=t.slice(0,3),s=t.slice(3,6);e=e.toUpperCase(),s=s.toUpperCase(),o=(e=this.commonCurrencyCode(e))+"/"+(s=this.commonCurrencyCode(s))}let d=s[t];r[o]=this.parseTicker(d,a)}return r}async fetchTicker(e,t={}){await this.loadMarkets();let s=this.market(e),i=await this.publicGetTickersMarket(this.extend({market:s.id},t));return this.parseTicker(i,s)}parseTrade(e,t){let s=this.parse8601(e.created_at);return{id:e.id.toString(),timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,type:void 0,side:void 0,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"volume"),cost:this.safeFloat(e,"funds"),info:e}}async fetchTrades(e,t,s,i={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetTrades(this.extend({market:r.id},i));return this.parseTrades(a,r,t,s)}parseOHLCV(e,t,s="1m",i,r){return[1e3*e[0],e[1],e[2],e[3],e[4],e[5]]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();let a=this.market(e);i||(i=500);let o={market:a.id,period:this.timeframes[t],limit:i};void 0!==s&&(o.timestamp=s);let d=await this.publicGetK(this.extend(o,r));return this.parseOHLCVs(d,a,t,s,i)}parseOrder(e,t){let s=void 0;if(t)s=t.symbol;else{let t=e.market;s=this.markets_by_id[t].symbol}let i=this.parse8601(e.created_at),r=e.state,a=void 0;return"done"===r?a="closed":"wait"===r?a="open":"cancel"===r&&(a="canceled"),{id:e.id.toString(),timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,status:a,symbol:s,type:e.ord_type,side:e.side,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"volume"),filled:this.safeFloat(e,"executed_volume"),remaining:this.safeFloat(e,"remaining_volume"),trades:void 0,fee:void 0,info:e}}async fetchOrder(e,t,s={}){await this.loadMarkets();let i=await this.privateGetOrder(this.extend({id:parseInt(e)},s));return this.parseOrder(i)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();let o={market:this.marketId(e),side:s,volume:i.toString(),ord_type:t};"limit"===t&&(o.price=r.toString());let d=await this.privatePostOrders(this.extend(o,a)),h=this.markets_by_id[d.market];return this.parseOrder(d,h)}async cancelOrder(e,t,i={}){await this.loadMarkets();let r=await this.privatePostOrderDelete({id:e}),a=this.parseOrder(r),o=a.status;if("closed"===o||"canceled"===o)throw new s(this.id+" "+this.json(a));return a}async withdraw(e,t,s,i,r={}){return this.checkAddress(s),await this.loadMarkets(),{info:await this.privatePostWithdraw(this.extend({currency:e.toLowerCase(),sum:t,address:s},r)),id:void 0}}nonce(){return this.milliseconds()}encodeParams(e){if("orders"in e){let t=e.orders,s=this.urlencode(this.keysort(this.omit(e,"orders")));for(let e=0;e<t.length;e++){let i=t[e],r=Object.keys(i);for(let e=0;e<r.length;e++){let t=r[e];s+="&orders%5B%5D%5B"+t+"%5D="+i[t].toString()}}return s}return this.urlencode(this.keysort(e))}sign(e,t="public",s="GET",i={},r,a){let o="/api/"+this.version+"/"+this.implodeParams(e,i);"extension"in this.urls&&(o+=this.urls.extension);let d=this.omit(i,this.extractParams(e)),h=this.urls.api+o;if("public"===t)Object.keys(d).length&&(h+="?"+this.urlencode(d));else{this.checkRequiredCredentials();let e=this.nonce().toString(),t=this.encodeParams(this.extend({access_key:this.apiKey,tonce:e},i)),d=s+"|"+o+"|"+t,l=t+"&signature="+this.hmac(this.encode(d),this.encode(this.secret));"GET"===s?h+="?"+l:(a=l,r={"Content-Type":"application/x-www-form-urlencoded"})}return{url:h,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,a){if(400===e){const e=JSON.parse(a),t=this.safeValue(e,"error"),s=this.safeString(t,"code"),i=this.id+" "+this.json(e),r=this.exceptions;if(s in r)throw new r[s](i)}}};
//# sourceMappingURL=acx.js.map