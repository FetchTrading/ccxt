"use strict";const e=require("./base/Exchange"),{ExchangeError:t}=require("./base/errors");module.exports=class extends e{describe(){return this.deepExtend(super.describe(),{id:"luno",name:"luno",countries:["GB","SG","ZA"],rateLimit:1e4,version:"1",has:{CORS:!1,fetchTickers:!0,fetchOrder:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766607-8c1a69d8-5ede-11e7-930c-540b5eb9be24.jpg",api:"https://api.mybitx.com/api",www:"https://www.luno.com",doc:["https://www.luno.com/en/api","https://npmjs.org/package/bitx","https://github.com/bausmeier/node-bitx"]},api:{public:{get:["orderbook","ticker","tickers","trades"]},private:{get:["accounts/{id}/pending","accounts/{id}/transactions","balance","fee_info","funding_address","listorders","listtrades","orders/{id}","quotes/{id}","withdrawals","withdrawals/{id}"],post:["accounts","postorder","marketorder","stoporder","funding_address","withdrawals","send","quotes","oauth2/grant"],put:["quotes/{id}"],delete:["quotes/{id}","withdrawals/{id}"]}}})}async fetchMarkets(){let e=await this.publicGetTickers(),t=[];for(let i=0;i<e.tickers.length;i++){let s=e.tickers[i],a=s.pair,r=a.slice(0,3),o=a.slice(3,6),d=(r=this.commonCurrencyCode(r))+"/"+(o=this.commonCurrencyCode(o));t.push({id:a,symbol:d,base:r,quote:o,info:s})}return t}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetBalance(),i=t.balance,s={info:t};for(let e=0;e<i.length;e++){let t=i[e],a=this.commonCurrencyCode(t.asset),r=parseFloat(t.reserved),o=parseFloat(t.unconfirmed),d={free:0,used:this.sum(r,o),total:parseFloat(t.balance)};d.free=d.total-d.used,s[a]=d}return this.parseBalance(s)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetOrderbook(this.extend({pair:this.marketId(e)},i)),a=s.timestamp;return this.parseOrderBook(s,a,"bids","asks","price","volume")}parseOrder(e,t){let i=e.creation_timestamp,s="PENDING"===e.state?"open":"closed",a="ASK"===e.type?"sell":"buy",r=void 0;t&&(r=t.symbol);let o=this.safeFloat(e,"limit_price"),d=this.safeFloat(e,"limit_volume"),l=this.safeFloat(e,"fee_counter"),c=this.safeFloat(e,"fee_base"),n={currency:void 0};return l?(n.side="quote",n.cost=l):(n.side="base",n.cost=c),{id:e.order_id,datetime:this.iso8601(i),timestamp:i,lastTradeTimestamp:void 0,status:s,symbol:r,type:void 0,side:a,price:o,amount:d,filled:void 0,remaining:void 0,trades:void 0,fee:n,info:e}}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetOrdersId(this.extend({id:e},i));return this.parseOrder(s)}parseTicker(e,t){let i=e.timestamp,s=void 0;t&&(s=t.symbol);let a=this.safeFloat(e,"last_trade");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:void 0,low:void 0,bid:this.safeFloat(e,"bid"),bidVolume:void 0,ask:this.safeFloat(e,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"rolling_24_hour_volume"),quoteVolume:void 0,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTickers(t),s=this.indexBy(i.tickers,"pair"),a=Object.keys(s),r={};for(let e=0;e<a.length;e++){let t=a[e],i=this.markets_by_id[t],o=i.symbol,d=s[t];r[o]=this.parseTicker(d,i)}return r}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetTicker(this.extend({pair:i.id},t));return this.parseTicker(s,i)}parseTrade(e,t){let i=e.is_buy?"buy":"sell";return{info:e,id:void 0,order:void 0,timestamp:e.timestamp,datetime:this.iso8601(e.timestamp),symbol:t.symbol,type:void 0,side:i,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"volume")}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let a=this.market(e),r={pair:a.id};void 0!==t&&(r.since=t);let o=await this.publicGetTrades(this.extend(r,s));return this.parseTrades(o.trades,a,t,i)}async createOrder(e,t,i,s,a,r={}){await this.loadMarkets();let o="privatePost",d={pair:this.marketId(e)};"market"===t?(o+="Marketorder",d.type=i.toUpperCase(),"buy"===i?d.counter_volume=s:d.base_volume=s):(o+="Postorder",d.volume=s,d.price=a,d.type="buy"===i?"BID":"ASK");let l=await this[o](this.extend(d,r));return{info:l,id:l.order_id}}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.privatePostStoporder({order_id:e})}sign(e,t="public",i="GET",s={},a,r){let o=this.urls.api+"/"+this.version+"/"+this.implodeParams(e,s),d=this.omit(s,this.extractParams(e));if(Object.keys(d).length&&(o+="?"+this.urlencode(d)),"private"===t){this.checkRequiredCredentials();let e=this.encode(this.apiKey+":"+this.secret);e=this.stringToBase64(e),a={Authorization:"Basic "+this.decode(e)}}return{url:o,method:i,body:r,headers:a}}async request(e,i="public",s="GET",a={},r,o){let d=await this.fetch2(e,i,s,a,r,o);if("error"in d)throw new t(this.id+" "+this.json(d));return d}};
//# sourceMappingURL=luno.js.map