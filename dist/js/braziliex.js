"use strict";const e=require("./base/Exchange"),{ExchangeError:t,InvalidOrder:i,AuthenticationError:s}=require("./base/errors");module.exports=class extends e{describe(){return this.deepExtend(super.describe(),{id:"braziliex",name:"Braziliex",countries:"BR",rateLimit:1e3,has:{fetchCurrencies:!0,fetchTickers:!0,fetchOpenOrders:!0,fetchMyTrades:!0,fetchDepositAddress:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/34703593-c4498674-f504-11e7-8d14-ff8e44fb78c1.jpg",api:"https://braziliex.com/api/v1",www:"https://braziliex.com/",doc:"https://braziliex.com/exchange/api.php",fees:"https://braziliex.com/exchange/fees.php"},api:{public:{get:["currencies","ticker","ticker/{market}","orderbook/{market}","tradehistory/{market}"]},private:{post:["balance","complete_balance","open_orders","trade_history","deposit_address","sell","buy","cancel_order"]}},fees:{trading:{maker:.005,taker:.005}},precision:{amount:8,price:8}})}async fetchCurrencies(e={}){let t=await this.publicGetCurrencies(e),i=Object.keys(t),s={};for(let e=0;e<i.length;e++){let a=i[e],r=t[a],o=this.safeInteger(r,"decimal"),n=a.toUpperCase(),h=this.commonCurrencyCode(n),c=1===this.safeInteger(r,"active"),d="ok";0!==this.safeInteger(r,"under_maintenance")&&(c=!1,d="maintenance");let l=1===this.safeInteger(r,"is_withdrawal_active"),p=1===this.safeInteger(r,"is_deposit_active");l&&p||(c=!1),s[h]={id:a,code:h,name:r.name,active:c,status:d,precision:o,funding:{withdraw:{active:l,fee:r.txWithdrawalFee},deposit:{active:p,fee:r.txDepositFee}},limits:{amount:{min:r.minAmountTrade,max:Math.pow(10,o)},price:{min:Math.pow(10,-o),max:Math.pow(10,o)},cost:{min:void 0,max:void 0},withdraw:{min:r.MinWithdrawal,max:Math.pow(10,o)},deposit:{min:r.minDeposit,max:void 0}},info:r}}return s}async fetchMarkets(){let e=await this.publicGetTicker(),t=Object.keys(e),i=[];for(let s=0;s<t.length;s++){let a=t[s],r=e[a],[o,n]=a.split("_"),h=o.toUpperCase(),c=n.toUpperCase(),d=(h=this.commonCurrencyCode(h))+"/"+(c=this.commonCurrencyCode(c)),l=1===this.safeInteger(r,"active"),p={amount:8,price:8},m=Math.pow(10,-p.amount);i.push({id:a,symbol:d.toUpperCase(),base:h,quote:c,baseId:o,quoteId:n,active:l,lot:m,precision:p,limits:{amount:{min:m,max:Math.pow(10,p.amount)},price:{min:Math.pow(10,-p.price),max:Math.pow(10,p.price)},cost:{min:void 0,max:void 0}},info:r})}return i}parseTicker(e,t){let i=t.symbol,s=e.date;e=e.ticker;let a=this.safeFloat(e,"last");return{symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(e,"highestBid24"),low:this.safeFloat(e,"lowestAsk24"),bid:this.safeFloat(e,"highestBid"),bidVolume:void 0,ask:this.safeFloat(e,"lowestAsk"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:this.safeFloat(e,"percentChange"),percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"baseVolume24"),quoteVolume:this.safeFloat(e,"quoteVolume24"),info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetTickerMarket(this.extend({market:i.id},t));return s={date:this.milliseconds(),ticker:s},this.parseTicker(s,i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTicker(t),s={},a=this.milliseconds(),r=Object.keys(i);for(let e=0;e<r.length;e++){let t=r[e],o=this.markets_by_id[t],n=o.symbol,h={date:a,ticker:i[t]};s[n]=this.parseTicker(h,o)}return s}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetOrderbookMarket(this.extend({market:this.marketId(e)},i));return this.parseOrderBook(s,void 0,"bids","asks","price","amount")}parseTrade(e,t){let i=void 0;i="date_exec"in e?this.parse8601(e.date_exec):this.parse8601(e.date);let s=this.safeFloat(e,"price"),a=this.safeFloat(e,"amount"),r=t.symbol,o=this.safeFloat(e,"total"),n=this.safeString(e,"order_number");return{timestamp:i,datetime:this.iso8601(i),symbol:r,id:this.safeString(e,"_id"),order:n,type:"limit",side:e.type,price:s,amount:a,cost:o,fee:void 0,info:e}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let a=this.market(e),r=await this.publicGetTradehistoryMarket(this.extend({market:a.id},s));return this.parseTrades(r,a,t,i)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostCompleteBalance(e),i={info:t},s=Object.keys(t);for(let e=0;e<s.length;e++){let a=s[e],r=t[a],o=this.commonCurrencyCode(a),n={free:parseFloat(r.available),used:0,total:parseFloat(r.total)};n.used=n.total-n.free,i[o]=n}return this.parseBalance(i)}parseOrder(e,t){let i=void 0;if(!t){let i=this.safeString(e,"market");i&&i in this.markets_by_id&&(t=this.markets_by_id[i])}t&&(i=t.symbol);let s=this.safeValue(e,"timestamp");s||(s=this.parse8601(e.date));let a=this.safeFloat(e,"price"),r=this.safeFloat(e,"total",0),o=this.safeFloat(e,"amount"),n=o*this.safeFloat(e,"progress"),h=this.amountToPrecision(i,o-n),c=e;return"info"in c&&(c=e.info),{id:e.order_number,datetime:this.iso8601(s),timestamp:s,lastTradeTimestamp:void 0,status:"open",symbol:i,type:"limit",side:e.type,price:a,cost:r,amount:o,filled:n,remaining:h,trades:void 0,fee:this.safeValue(e,"fee"),info:c}}async createOrder(e,t,s,a,r,o={}){await this.loadMarkets();let n=this.market(e),h="privatePost"+this.capitalize(s),c=await this[h](this.extend({market:n.id,price:r,amount:a},o));if(1!==this.safeInteger(c,"success"))throw new i(this.id+" "+this.json(c));let d=c.message.split(" / "),l=(d=d.slice(1))[5].split(" "),p=this.parseOrder({timestamp:this.milliseconds(),order_number:c.order_number,type:d[0].toLowerCase(),market:d[0].toLowerCase(),amount:d[2].split(" ")[1],price:d[3].split(" ")[1],total:d[4].split(" ")[1],fee:{cost:parseFloat(l[1]),currency:l[2]},progress:"0.0",info:c},n),m=p.id;return this.orders[m]=p,p}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=this.market(t);return await this.privatePostCancelOrder(this.extend({order_number:e,market:s.id},i))}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let a=this.market(e),r=await this.privatePostOpenOrders(this.extend({market:a.id},s));return this.parseOrders(r.order_open,a,t,i)}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets();let a=this.market(e),r=await this.privatePostTradeHistory(this.extend({market:a.id},s));return this.parseTrades(r.trade_history,a,t,i)}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=await this.privatePostDepositAddress(this.extend({currency:i.id},t)),a=this.safeString(s,"deposit_address");return this.checkAddress(a),{currency:e,address:a,tag:this.safeString(s,"payment_id"),status:"ok",info:s}}sign(e,t="public",i="GET",s={},a,r){let o=this.urls.api+"/"+t,n=this.omit(s,this.extractParams(e));if("public"===t)o+="/"+this.implodeParams(e,s),Object.keys(n).length&&(o+="?"+this.urlencode(n));else{this.checkRequiredCredentials(),n=this.extend({command:e,nonce:this.nonce()},n),r=this.urlencode(n);let t=this.hmac(this.encode(r),this.encode(this.secret),"sha512");a={"Content-type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:this.decode(t)}}return{url:o,method:i,body:r,headers:a}}async request(e,i="public",a="GET",r={},o,n){let h=await this.fetch2(e,i,a,r,o,n);if("success"in h){if(0===this.safeInteger(h,"success")){let e=this.safeString(h,"message");if("Invalid APIKey"===e)throw new s(e);throw new t(e)}}return h}};
//# sourceMappingURL=braziliex.js.map