"use strict";const e=require("./base/Exchange"),{ExchangeError:t}=require("./base/errors");module.exports=class extends e{describe(){return this.deepExtend(super.describe(),{id:"ccex",name:"C-CEX",countries:["DE","EU"],rateLimit:1500,has:{CORS:!1,fetchTickers:!0,fetchOrderBooks:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766433-16881f90-5ed8-11e7-92f8-3d92cc747a6c.jpg",api:{web:"https://c-cex.com/t",public:"https://c-cex.com/t/api_pub.html",private:"https://c-cex.com/t/api.html"},www:"https://c-cex.com",doc:"https://c-cex.com/?id=api"},api:{web:{get:["coinnames","{market}","pairs","prices","volume_{coin}"]},public:{get:["balancedistribution","markethistory","markets","marketsummaries","orderbook","fullorderbook"]},private:{get:["buylimit","cancel","getbalance","getbalances","getopenorders","getorder","getorderhistory","mytrades","selllimit"]}},fees:{trading:{taker:.002,maker:.002}},commonCurrencies:{BLC:"Cryptobullcoin",CRC:"CoreCoin",IOT:"IoTcoin",LUX:"Luxmi",VIT:"VitalCoin",XID:"InternationalDiamond"}})}async fetchMarkets(){let e={},t=(await this.webGetPairs()).pairs;for(let i=0;i<t.length;i++){let s=t[i],[a,r]=s.split("-"),o=a.toUpperCase(),l=r.toUpperCase(),c=(o=this.commonCurrencyCode(o))+"/"+(l=this.commonCurrencyCode(l));e[c]={id:s,symbol:c,base:o,quote:l,baseId:a,quoteId:r,info:s}}return e}async fetchBalance(e={}){await this.loadMarkets();let t=(await this.privateGetGetbalances()).result,i={info:t};for(let e=0;e<t.length;e++){let s=t[e],a=s.Currency,r=this.commonCurrencyCode(a),o={free:s.Available,used:s.Pending,total:s.Balance};i[r]=o}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={market:this.marketId(e),type:"both"};void 0!==t&&(s.depth=t);let a=(await this.publicGetOrderbook(this.extend(s,i))).result;return this.parseOrderBook(a,void 0,"buy","sell","Rate","Quantity")}async fetchOrderBooks(e,t={}){await this.loadMarkets();let i={},s=await this.publicGetFullorderbook(),a=Object.keys(s.result);for(let e=0;e<a.length;e++){let t=a[e],r=s.result[t],o=this.groupBy(r,"Market"),l=Object.keys(o);for(let e=0;e<l.length;e++){let s=l[e],a=s.toUpperCase(),r=t;if(a in this.markets_by_id){a=this.markets_by_id[a].symbol}else{let[e,t]=a.split("-"),i=t+"-"+e;if(i in this.markets_by_id){a=this.markets_by_id[i].symbol}}a in i||(i[a]={}),i[a][r]=o[s]}}let r={},o=Object.keys(i);for(let e=0;e<o.length;e++){let t=o[e];r[t]=this.parseOrderBook(i[t],void 0,"buy","sell","Rate","Quantity")}return r}parseTicker(e,t){let i=1e3*e.updated,s=void 0;void 0!==t&&(s=t.symbol);let a=this.safeFloat(e,"lastprice");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"buy"),bidVolume:void 0,ask:this.safeFloat(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:this.safeFloat(e,"avg"),baseVolume:void 0,quoteVolume:this.safeFloat(e,"buysupport"),info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.webGetPrices(t),s={},a=Object.keys(i);for(let e=0;e<a.length;e++){let t=a[e],r=i[t],o=void 0,l=void 0;if(t in this.markets_by_id)l=(o=this.markets_by_id[t]).symbol;else{let e=t.toUpperCase(),[i,s]=e.split("-");l=(i=this.commonCurrencyCode(i))+"/"+(s=this.commonCurrencyCode(s))}s[l]=this.parseTicker(r,o)}return s}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=(await this.webGetMarket(this.extend({market:i.id.toLowerCase()},t))).ticker;return this.parseTicker(s,i)}parseTrade(e,t){let i=this.parse8601(e.TimeStamp);return{id:e.Id.toString(),info:e,order:void 0,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:e.OrderType.toLowerCase(),price:e.Price,amount:e.Quantity}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let a=this.market(e),r=await this.publicGetMarkethistory(this.extend({market:a.id,type:"both",depth:100},s));return this.parseTrades(r.result,a,t,i)}async createOrder(e,t,i,s,a,r={}){await this.loadMarkets();let o="privateGet"+this.capitalize(i)+t,l=await this[o](this.extend({market:this.marketId(e),quantity:s,rate:a},r));return{info:l,id:l.result.uuid}}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.privateGetCancel({uuid:e})}sign(e,t="public",i="GET",s={},a,r){let o=this.urls.api[t];if("private"===t){this.checkRequiredCredentials();let t=this.nonce().toString(),i=this.keysort(this.extend({a:e,apikey:this.apiKey,nonce:t},s));o+="?"+this.urlencode(i),a={apisign:this.hmac(this.encode(o),this.encode(this.secret),"sha512")}}else o+="public"===t?"?"+this.urlencode(this.extend({a:"get"+e},s)):"/"+this.implodeParams(e,s)+".json";return{url:o,method:i,body:r,headers:a}}async request(e,i="public",s="GET",a={},r,o){let l=await this.fetch2(e,i,s,a,r,o);if("web"===i)return l;if("success"in l&&l.success)return l;throw new t(this.id+" "+this.json(l))}};
//# sourceMappingURL=ccex.js.map