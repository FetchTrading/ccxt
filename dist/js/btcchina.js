"use strict";const e=require("./base/Exchange");module.exports=class extends e{describe(){return this.deepExtend(super.describe(),{id:"btcchina",name:"BTCChina",countries:"CN",rateLimit:1500,version:"v1",has:{CORS:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766368-465b3286-5ed6-11e7-9a11-0f6467e1d82b.jpg",api:{plus:"https://plus-api.btcchina.com/market",public:"https://data.btcchina.com/data",private:"https://api.btcchina.com/api_trade_v1.php"},www:"https://www.btcchina.com",doc:"https://www.btcchina.com/apidocs"},api:{plus:{get:["orderbook","ticker","trade"]},public:{get:["historydata","orderbook","ticker","trades"]},private:{post:["BuyIcebergOrder","BuyOrder","BuyOrder2","BuyStopOrder","CancelIcebergOrder","CancelOrder","CancelStopOrder","GetAccountInfo","getArchivedOrder","getArchivedOrders","GetDeposits","GetIcebergOrder","GetIcebergOrders","GetMarketDepth","GetMarketDepth2","GetOrder","GetOrders","GetStopOrder","GetStopOrders","GetTransactions","GetWithdrawal","GetWithdrawals","RequestWithdrawal","SellIcebergOrder","SellOrder","SellOrder2","SellStopOrder"]}},markets:{"BTC/CNY":{id:"btccny",symbol:"BTC/CNY",base:"BTC",quote:"CNY",api:"public",plus:!1},"LTC/CNY":{id:"ltccny",symbol:"LTC/CNY",base:"LTC",quote:"CNY",api:"public",plus:!1},"LTC/BTC":{id:"ltcbtc",symbol:"LTC/BTC",base:"LTC",quote:"BTC",api:"public",plus:!1},"BCH/CNY":{id:"bcccny",symbol:"BCH/CNY",base:"BCH",quote:"CNY",api:"plus",plus:!0},"ETH/CNY":{id:"ethcny",symbol:"ETH/CNY",base:"ETH",quote:"CNY",api:"plus",plus:!0}}})}async fetchMarkets(){let e=await this.publicGetTicker({market:"all"}),t=[],s=Object.keys(e);for(let a=0;a<s.length;a++){let i=s[a],r=e[i],o=i.split("_")[1],l=o.slice(0,3),c=o.slice(3,6),d=(l=l.toUpperCase())+"/"+(c=c.toUpperCase());t.push({id:o,symbol:d,base:l,quote:c,info:r})}return t}async fetchBalance(e={}){await this.loadMarkets();let t=(await this.privatePostGetAccountInfo()).result,s={info:t},a=Object.keys(this.currencies);for(let e=0;e<a.length;e++){let i=a[e],r=i.toLowerCase(),o=this.account();r in t.balance&&(o.total=parseFloat(t.balance[r].amount)),r in t.frozen&&(o.used=parseFloat(t.frozen[r].amount)),o.free=o.total-o.used,s[i]=o}return this.parseBalance(s)}createMarketRequest(e){let t={};return t[e.plus?"symbol":"market"]=e.id,t}async fetchOrderBook(e,t,s={}){await this.loadMarkets();let a=this.market(e),i=a.api+"GetOrderbook",r=this.createMarketRequest(a),o=await this[i](this.extend(r,s)),l=1e3*o.date;return this.parseOrderBook(o,l)}parseTicker(e,t){let s=1e3*e.date,a=this.safeFloat(e,"last");return{timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"buy"),ask:this.safeFloat(e,"sell"),vwap:this.safeFloat(e,"vwap"),open:this.safeFloat(e,"open"),close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"vol"),quoteVolume:void 0,info:e}}parseTickerPlus(e,t){let s=e.Timestamp,a=void 0;return t&&(a=t.symbol),{symbol:a,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(e,"High"),low:this.safeFloat(e,"Low"),bid:this.safeFloat(e,"BidPrice"),ask:this.safeFloat(e,"AskPrice"),vwap:void 0,open:this.safeFloat(e,"Open"),last:this.safeFloat(e,"Last"),change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"Volume24H"),quoteVolume:void 0,info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let s=this.market(e),a=s.api+"GetTicker",i=this.createMarketRequest(s),r=(await this[a](this.extend(i,t))).ticker;return s.plus?this.parseTickerPlus(r,s):this.parseTicker(r,s)}parseTrade(e,t){let s=1e3*parseInt(e.date);return{id:e.tid,info:e,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,type:void 0,side:void 0,price:e.price,amount:e.amount}}parseTradePlus(e,t){let s=this.parse8601(e.timestamp);return{id:void 0,info:e,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,type:void 0,side:e.side.toLowerCase(),price:e.price,amount:e.size}}parseTradesPlus(e,t){let s=[];for(let a=0;a<e.length;a++)s.push(this.parseTradePlus(e[a],t));return s}async fetchTrades(e,t,s,a={}){await this.loadMarkets();let i=this.market(e),r=i.api+"GetTrade",o=this.createMarketRequest(i);if(i.plus){let e=this.milliseconds();o.start_time=e-864e5,o.end_time=e}else r+="s";let l=await this[r](this.extend(o,a));return i.plus?this.parseTradesPlus(l.trades,i):this.parseTrades(l,i,t,s)}async createOrder(e,t,s,a,i,r={}){await this.loadMarkets();let o=this.market(e),l="privatePost"+this.capitalize(s)+"Order2",c={},d=o.id.toUpperCase();c.params="market"===t?[void 0,a,d]:[i,a,d];let h=await this[l](this.extend(c,r));return{info:h,id:h.id}}async cancelOrder(e,t,s={}){await this.loadMarkets();let a=s.market;return await this.privatePostCancelOrder(this.extend({params:[e,a]},s))}nonce(){return this.microseconds()}sign(e,t="public",s="GET",a={},i,r){let o=this.urls.api[t]+"/"+e;if("private"===t){this.checkRequiredCredentials();let t=[];"params"in a&&(t=a.params);let o=this.nonce(),l={method:e,id:o,params:t};t=t.join(","),r=this.json(l);let c="tonce="+o+"&accesskey="+this.apiKey+"&requestmethod="+s.toLowerCase()+"&id="+o+"&method="+e+"&params="+t,d=this.hmac(this.encode(c),this.encode(this.secret),"sha1"),h=this.encode(this.apiKey+":"+d);i={Authorization:"Basic "+this.stringToBase64(h),"Json-Rpc-Tonce":o}}else Object.keys(a).length&&(o+="?"+this.urlencode(a));return{url:o,method:s,body:r,headers:i}}};
//# sourceMappingURL=btcchina.js.map