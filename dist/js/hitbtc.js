"use strict";const e=require("./base/Exchange"),{ExchangeError:t,InsufficientFunds:s,OrderNotFound:i}=require("./base/errors");module.exports=class extends e{describe(){return this.deepExtend(super.describe(),{id:"hitbtc",name:"HitBTC",countries:"HK",rateLimit:1500,version:"1",has:{CORS:!1,fetchTrades:!0,fetchTickers:!0,fetchOrder:!0,fetchOpenOrders:!0,fetchClosedOrders:!0,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766555-8eaec20e-5edc-11e7-9c5b-6dc69fc42f5e.jpg",api:"http://api.hitbtc.com",www:"https://hitbtc.com",referral:"https://hitbtc.com/?ref_id=5a5d39a65d466",doc:"https://github.com/hitbtc-com/hitbtc-api/blob/master/APIv1.md",fees:["https://hitbtc.com/fees-and-limits","https://support.hitbtc.com/hc/en-us/articles/115005148605-Fees-and-limits"]},api:{public:{get:["{symbol}/orderbook","{symbol}/ticker","{symbol}/trades","{symbol}/trades/recent","symbols","ticker","time"]},trading:{get:["balance","orders/active","orders/recent","order","trades/by/order","trades"],post:["new_order","cancel_order","cancel_orders"]},payment:{get:["balance","address/{currency}","transactions","transactions/{transaction}"],post:["transfer_to_trading","transfer_to_main","address/{currency}","payout"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:-1e-4,taker:.001},funding:{tierBased:!1,percentage:!1,withdraw:{BTC:.001,BCC:.0018,ETH:.00215,BCH:.0018,USDT:100,DASH:.03,BTG:5e-4,LTC:.003,ZEC:1e-4,XMR:.09,"1ST":.84,ADX:5.7,AE:6.7,AEON:.01006,AIR:565,AMP:9,ANT:6.7,ARDR:1,ARN:18.5,ART:26,ATB:4e-4,ATL:27,ATM:504,ATS:860,AVT:1.9,BAS:113,BCN:.1,"DAO.Casino":124,BKB:46,BMC:32,BMT:100,BNT:2.57,BQX:4.7,BTM:40,BTX:.04,BUS:.004,CCT:115,CDT:100,CDX:30,CFI:61,CLD:.88,CND:574,CNX:.04,COSS:65,CSNO:16,CTR:15,CTX:146,CVC:8.46,DBIX:.0168,DCN:12e4,DCT:.02,DDF:342,DENT:6240,DGB:.4,DGD:.01,DICE:.32,DLT:.26,DNT:.21,DOGE:2,DOV:34,DRPU:24,DRT:240,DSH:.017,EBET:84,EBTC:20,EBTCOLD:6.6,ECAT:14,EDG:2,EDO:2.9,ELE:.00172,ELM:.004,EMC:.03,EMGO:14,ENJ:163,EOS:1.5,ERO:34,ETBS:15,ETC:.002,ETP:.004,EVX:5.4,EXN:456,FRD:65,FUEL:123.00105,FUN:202.9598309,FYN:1.849,FYP:66.13,GNO:.0034,GUP:4,GVT:1.2,HAC:144,HDG:7,HGT:1082,HPC:.4,HVN:120,ICN:.55,ICO:34,ICOS:.35,IND:76,INDI:5913,ITS:15.0012,IXT:11,KBR:143,KICK:112,LA:41,LAT:1.44,LIFE:13e3,LRC:27,LSK:.3,LUN:.34,MAID:5,MANA:143,MCAP:5.44,MIPS:43,MNE:1.33,MSP:121,MTH:92,MYB:3.9,NDC:165,NEBL:.04,NET:3.96,NTO:998,NXC:13.39,NXT:3,OAX:15,ODN:.004,OMG:2,OPT:335,ORME:2.8,OTN:.57,PAY:3.1,PIX:96,PLBT:.33,PLR:114,PLU:.87,POE:784,POLL:3.5,PPT:2,PRE:32,PRG:39,PRO:41,PRS:60,PTOY:.5,QAU:63,QCN:.03,QTUM:.04,QVT:64,REP:.02,RKC:15,RVT:14,SAN:2.24,SBD:.03,SCL:2.6,SISA:1640,SKIN:407,SMART:.4,SMS:.0375,SNC:36,SNGLS:4,SNM:48,SNT:233,STEEM:.01,STRAT:.01,STU:14,STX:11,SUB:17,SUR:3,SWT:.51,TAAS:.91,TBT:2.37,TFL:15,TIME:.03,TIX:7.1,TKN:1,TKR:84,TNT:90,TRST:1.6,TRX:1395,UET:480,UGT:15,VEN:14,VERI:.037,VIB:50,VIBE:145,VOISE:618,WEALTH:.0168,WINGS:2.4,WTC:.75,XAUR:3.23,XDN:.01,XEM:15,XUC:.9,YOYOW:140,ZAP:24,ZRX:23,ZSC:191},deposit:{BTC:6e-4,ETH:.003,BCH:0,USDT:0,BTG:0,LTC:0,ZEC:0,XMR:0,"1ST":0,ADX:0,AE:0,AEON:0,AIR:0,AMP:0,ANT:0,ARDR:0,ARN:0,ART:0,ATB:0,ATL:0,ATM:0,ATS:0,AVT:0,BAS:0,BCN:0,"DAO.Casino":0,BKB:0,BMC:0,BMT:0,BNT:0,BQX:0,BTM:0,BTX:0,BUS:0,CCT:0,CDT:0,CDX:0,CFI:0,CLD:0,CND:0,CNX:0,COSS:0,CSNO:0,CTR:0,CTX:0,CVC:0,DBIX:0,DCN:0,DCT:0,DDF:0,DENT:0,DGB:0,DGD:0,DICE:0,DLT:0,DNT:0,DOGE:0,DOV:0,DRPU:0,DRT:0,DSH:0,EBET:0,EBTC:0,EBTCOLD:0,ECAT:0,EDG:0,EDO:0,ELE:0,ELM:0,EMC:0,EMGO:0,ENJ:0,EOS:0,ERO:0,ETBS:0,ETC:0,ETP:0,EVX:0,EXN:0,FRD:0,FUEL:0,FUN:0,FYN:0,FYP:0,GNO:0,GUP:0,GVT:0,HAC:0,HDG:0,HGT:0,HPC:0,HVN:0,ICN:0,ICO:0,ICOS:0,IND:0,INDI:0,ITS:0,IXT:0,KBR:0,KICK:0,LA:0,LAT:0,LIFE:0,LRC:0,LSK:0,LUN:0,MAID:0,MANA:0,MCAP:0,MIPS:0,MNE:0,MSP:0,MTH:0,MYB:0,NDC:0,NEBL:0,NET:0,NTO:0,NXC:0,NXT:0,OAX:0,ODN:0,OMG:0,OPT:0,ORME:0,OTN:0,PAY:0,PIX:0,PLBT:0,PLR:0,PLU:0,POE:0,POLL:0,PPT:0,PRE:0,PRG:0,PRO:0,PRS:0,PTOY:0,QAU:0,QCN:0,QTUM:0,QVT:0,REP:0,RKC:0,RVT:0,SAN:0,SBD:0,SCL:0,SISA:0,SKIN:0,SMART:0,SMS:0,SNC:0,SNGLS:0,SNM:0,SNT:0,STEEM:0,STRAT:0,STU:0,STX:0,SUB:0,SUR:0,SWT:0,TAAS:0,TBT:0,TFL:0,TIME:0,TIX:0,TKN:0,TKR:0,TNT:0,TRST:0,TRX:0,UET:0,UGT:0,VEN:0,VERI:0,VIB:0,VIBE:0,VOISE:0,WEALTH:0,WINGS:0,WTC:0,XAUR:0,XDN:0,XEM:0,XUC:0,YOYOW:0,ZAP:0,ZRX:0,ZSC:0}}},commonCurrencies:{BCC:"BCC",BET:"DAO.Casino",CAT:"BitClave",DRK:"DASH",EMGO:"MGO",GET:"Themis",USD:"USDT",XBT:"BTC"},options:{defaultTimeInForce:"FOK"}})}async fetchMarkets(){let e=await this.publicGetSymbols(),t=[];for(let s=0;s<e.symbols.length;s++){let i=e.symbols[s],r=i.symbol,a=i.commodity,o=i.currency,d=this.safeFloat(i,"lot"),n=this.safeFloat(i,"step"),l=this.commonCurrencyCode(a),c=this.commonCurrencyCode(o),h=l+"/"+c;t.push({info:i,id:r,symbol:h,base:l,quote:c,baseId:a,quoteId:o,lot:d,step:n,active:!0,maker:this.safeFloat(i,"provideLiquidityRate"),taker:this.safeFloat(i,"takeLiquidityRate"),precision:{amount:this.precisionFromString(i.lot),price:this.precisionFromString(i.step)},limits:{amount:{min:d,max:void 0},price:{min:n,max:void 0},cost:{min:void 0,max:void 0}}})}return t}async fetchBalance(e={}){await this.loadMarkets();let t=this.safeString(e,"type","trading");t+="GetBalance";let s=this.omit(e,"type"),i=(await this[t](s)).balance,r={info:i};for(let e=0;e<i.length;e++){let t=i[e],s=t.currency_code,a=this.commonCurrencyCode(s),o=this.safeFloat(t,"cash",0);o=this.safeFloat(t,"balance",o);let d=this.safeFloat(t,"reserved",0),n={free:o,used:d,total:this.sum(o,d)};r[a]=n}return this.parseBalance(r)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();let i=await this.publicGetSymbolOrderbook(this.extend({symbol:this.marketId(e)},s));return this.parseOrderBook(i)}parseTicker(e,t){let s=e.timestamp,i=void 0;t&&(i=t.symbol);let r=this.safeFloat(e,"last");return{symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"bid"),bidVolume:void 0,ask:this.safeFloat(e,"ask"),askVolume:void 0,vwap:void 0,open:this.safeFloat(e,"open"),close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"volume"),quoteVolume:this.safeFloat(e,"volume_quote"),info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let s=await this.publicGetTicker(t),i=Object.keys(s),r={};for(let e=0;e<i.length;e++){let t=i[e],a=this.markets_by_id[t],o=a.symbol,d=s[t];r[o]=this.parseTicker(d,a)}return r}async fetchTicker(e,s={}){await this.loadMarkets();let i=this.market(e),r=await this.publicGetSymbolTicker(this.extend({symbol:i.id},s));if("message"in r)throw new t(this.id+" "+r.message);return this.parseTicker(r,i)}parseTrade(e,t){return Array.isArray(e)?this.parsePublicTrade(e,t):this.parseOrderTrade(e,t)}parsePublicTrade(e,t){let s=void 0;return t&&(s=t.symbol),{info:e,id:e[0].toString(),timestamp:e[3],datetime:this.iso8601(e[3]),symbol:s,type:void 0,side:e[4],price:parseFloat(e[1]),amount:parseFloat(e[2])}}parseOrderTrade(e,t){let s=void 0;t&&(s=t.symbol);let i=this.safeFloat(e,"execQuantity");t&&(i*=t.lot);let r=this.safeFloat(e,"execPrice"),a=r*i,o={cost:this.safeFloat(e,"fee"),currency:void 0,rate:void 0},d=e.timestamp;return{info:e,id:e.tradeId,order:e.clientOrderId,timestamp:d,datetime:this.iso8601(d),symbol:s,type:void 0,side:e.side,price:r,amount:i,cost:a,fee:o}}async fetchTrades(e,t,s,i={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetSymbolTrades(this.extend({symbol:r.id,side:"true"},i));return this.parseTrades(a.trades,r,t,s)}async createOrder(e,s,i,r,a,o={}){await this.loadMarkets();let d=this.market(e),n=parseFloat(r)/d.lot,l=Math.round(n),c=n-l;if(Math.abs(c)>d.step)throw new t(this.id+" order amount should be evenly divisible by lot unit size of "+d.lot.toString());let h={clientOrderId:this.milliseconds().toString(),symbol:d.id,side:i,quantity:l.toString(),type:s};"limit"===s?h.price=this.priceToPrecision(e,a):h.timeInForce=this.options.defaultTimeInForce;let T=await this.tradingPostNewOrder(this.extend(h,o));return this.parseOrder(T.ExecutionReport,d)}async cancelOrder(e,t,s={}){return await this.loadMarkets(),await this.tradingPostCancelOrder(this.extend({clientOrderId:e},s))}parseOrderStatus(e){return this.safeString({new:"open",partiallyFilled:"open",filled:"closed",canceled:"canceled",rejected:"rejected",expired:"expired"},e)}parseOrder(e,t){let s=this.safeInteger(e,"lastTimestamp");void 0===s&&(s=this.safeInteger(e,"timestamp"));let i=void 0;t||(t=this.markets_by_id[e.symbol]);let r=this.safeString(e,"orderStatus");r&&(r=this.parseOrderStatus(r));let a=this.safeFloat(e,"avgPrice",0),o=this.safeFloat(e,"orderPrice");void 0===o&&(o=this.safeFloat(e,"price"));let d=this.safeFloat(e,"orderQuantity");void 0===d&&(d=this.safeFloat(e,"quantity"));let n=this.safeFloat(e,"quantityLeaves");void 0===n&&(n=this.safeFloat(e,"leavesQuantity"));let l=void 0,c=void 0,h=void 0!==d,T=void 0!==n;if(void 0!==t)i=t.symbol,h&&(d*=t.lot),T&&(n*=t.lot);else{let s=this.safeString(e,"symbol");s in this.markets_by_id&&(t=this.markets_by_id[s])}h&&T&&(c=a*(l=d-n));let m=this.safeFloat(e,"fee"),u=void 0;void 0!==t&&(i=t.symbol,u=t.quote);let p={cost:m,currency:u,rate:void 0};return{id:e.clientOrderId.toString(),info:e,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,status:r,symbol:i,type:e.type,side:e.side,price:o,cost:c,amount:d,filled:l,remaining:n,fee:p}}async fetchOrder(e,t,s={}){await this.loadMarkets();let r=await this.tradingGetOrder(this.extend({clientOrderId:e},s));if(r.orders[0])return this.parseOrder(r.orders[0]);throw new i(this.id+" fetchOrder() error: "+this.response)}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets();let r=void 0,a={sort:"desc",statuses:["new","partiallyFiiled"].join(",")};e&&(r=this.market(e),a.symbols=r.id);let o=await this.tradingGetOrdersActive(this.extend(a,i));return this.parseOrders(o.orders,r,t,s)}async fetchClosedOrders(e,t,s,i={}){await this.loadMarkets();let r=void 0,a={sort:"desc",statuses:["filled","canceled","rejected","expired"].join(","),max_results:1e3};e&&(r=this.market(e),a.symbols=r.id);let o=await this.tradingGetOrdersRecent(this.extend(a,i));return this.parseOrders(o.orders,r,t,s)}async fetchOrderTrades(e,t,s,i,r={}){await this.loadMarkets();let a=void 0;void 0!==t&&(a=this.market(t));let o=await this.tradingGetTradesByOrder(this.extend({clientOrderId:e},r));return this.parseTrades(o.trades,a,s,i)}async withdraw(e,t,s,i,r={}){this.checkAddress(s),await this.loadMarkets();let a={currency_code:this.currency(e).id,amount:t,address:s};i&&(a.paymentId=i);let o=await this.paymentPostPayout(this.extend(a,r));return{info:o,id:o.transaction}}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){let o="/api/"+this.version+"/"+t+"/"+this.implodeParams(e,i),d=this.omit(i,this.extractParams(e));if("public"===t)Object.keys(d).length&&(o+="?"+this.urlencode(d));else{this.checkRequiredCredentials();let e={nonce:this.nonce(),apikey:this.apiKey};d=this.extend(e,d);let t=o+="GET"===s?"?"+this.urlencode(d):"?"+this.urlencode(e);"POST"===s&&Object.keys(d).length&&(t+=a=this.urlencode(d)),r={"Content-Type":"application/x-www-form-urlencoded","X-Signature":this.hmac(this.encode(t),this.encode(this.secret),"sha512").toLowerCase()}}return{url:o=this.urls.api+o,method:s,body:a,headers:r}}async request(e,i="public",r="GET",a={},o,d){let n=await this.fetch2(e,i,r,a,o,d);if("code"in n){if("ExecutionReport"in n&&"orderExceedsLimit"===n.ExecutionReport.orderRejectReason)throw new s(this.id+" "+this.json(n));throw new t(this.id+" "+this.json(n))}return n}};
//# sourceMappingURL=hitbtc.js.map