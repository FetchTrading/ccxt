"use strict";const e=require("./base/Exchange"),{ExchangeError:t,ExchangeNotAvailable:i,InvalidOrder:s}=require("./base/errors");module.exports=class extends e{describe(){return this.deepExtend(super.describe(),{id:"coinone",name:"CoinOne",countries:"KR",rateLimit:667,version:"v2",has:{CORS:!1,createMarketOrder:!1,fetchTickers:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/38003300-adc12fba-323f-11e8-8525-725f53c4a659.jpg",api:"https://api.coinone.co.kr",www:"https://coinone.co.kr",doc:"https://doc.coinone.co.kr"},requiredCredentials:{apiKey:!0,secret:!0},api:{public:{get:["orderbook/","trades/","ticker/"]},private:{post:["account/btc_deposit_address/","account/balance/","account/daily_balance/","account/user_info/","account/virtual_account/","order/cancel_all/","order/cancel/","order/limit_buy/","order/limit_sell/","order/complete_orders/","order/limit_orders/","order/order_info/","transaction/auth_number/","transaction/history/","transaction/krw/history/","transaction/btc/","transaction/coin/"]}},markets:{"BCH/KRW":{id:"bch",symbol:"BCH/KRW",base:"BCH",quote:"KRW",baseId:"bch",quoteId:"krw"},"BTC/KRW":{id:"btc",symbol:"BTC/KRW",base:"BTC",quote:"KRW",baseId:"btc",quoteId:"krw"},"BTG/KRW":{id:"btg",symbol:"BTG/KRW",base:"BTG",quote:"KRW",baseId:"btg",quoteId:"krw"},"ETC/KRW":{id:"etc",symbol:"ETC/KRW",base:"ETC",quote:"KRW",baseId:"etc",quoteId:"krw"},"ETH/KRW":{id:"eth",symbol:"ETH/KRW",base:"ETH",quote:"KRW",baseId:"eth",quoteId:"krw"},"IOTA/KRW":{id:"iota",symbol:"IOTA/KRW",base:"IOTA",quote:"KRW",baseId:"iota",quoteId:"krw"},"LTC/KRW":{id:"ltc",symbol:"LTC/KRW",base:"LTC",quote:"KRW",baseId:"ltc",quoteId:"krw"},"OMG/KRW":{id:"omg",symbol:"OMG/KRW",base:"OMG",quote:"KRW",baseId:"omg",quoteId:"krw"},"QTUM/KRW":{id:"qtum",symbol:"QTUM/KRW",base:"QTUM",quote:"KRW",baseId:"qtum",quoteId:"krw"},"XRP/KRW":{id:"xrp",symbol:"XRP/KRW",base:"XRP",quote:"KRW",baseId:"xrp",quoteId:"krw"}},fees:{trading:{tierBased:!0,percentage:!0,taker:.001,maker:.001,tiers:{taker:[[0,.001],[1e8,9e-4],[1e9,8e-4],[5e9,7e-4],[1e10,6e-4],[2e10,5e-4],[3e10,4e-4],[4e10,3e-4],[5e10,2e-4]],maker:[[0,.001],[1e8,8e-4],[1e9,6e-4],[5e9,4e-4],[1e10,2e-4],[2e10,0],[3e10,0],[4e10,0],[5e10,0]]}}},exceptions:{405:i}})}async fetchBalance(e={}){let t=await this.privatePostAccountBalance(),i={info:t},s=this.omit(t,["errorCode","result","normalWallets"]),r=Object.keys(s);for(let e=0;e<r.length;e++){let t=r[e],a=s[t],o=t.toUpperCase();t in this.currencies_by_id&&(o=this.currencies_by_id[t].code);let d=parseFloat(a.avail),c=parseFloat(a.balance),n={free:d,used:c-d,total:c};i[o]=n}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){let s=this.market(e),r=await this.publicGetOrderbook(this.extend({currency:s.id,format:"json"},i));return this.parseOrderBook(r,void 0,"bid","ask","price","qty")}async fetchTickers(e,t={}){await this.loadMarkets();let i={},s=await this.publicGetTicker(this.extend({currency:"all",format:"json"},t)),r=Object.keys(s);for(let e=0;e<r.length;e++){let t=r[e],a=t,o=void 0;if(t in this.markets_by_id){a=(o=this.markets_by_id[t]).symbol;let e=s[t];i[a]=this.parseTicker(e,o)}}return i}async fetchTicker(e,t={}){let i=this.market(e),s=await this.publicGetTicker(this.extend({currency:i.id,format:"json"},t));return this.parseTicker(s,i)}parseTicker(e,t){let i=this.milliseconds(),s=this.safeFloat(e,"last"),r=this.safeFloat(e,"yesterday_last"),a=void 0;return void 0!==s&&void 0!==r&&(a=r-s),{symbol:void 0!==t?t.symbol:void 0,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:this.safeFloat(e,"first"),close:s,last:s,previousClose:r,change:a,percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"volume"),quoteVolume:void 0,info:e}}parseTrade(e,t){let i=1e3*parseInt(e.timestamp),s=void 0!==t?t.symbol:void 0;return{id:void 0,timestamp:i,datetime:this.iso8601(i),order:void 0,symbol:s,type:void 0,side:void 0,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"qty"),fee:void 0,info:e}}async fetchTrades(e,t,i,s={}){let r=this.market(e),a=await this.publicGetTrades(this.extend({currency:r.id,period:"hour",format:"json"},s));return this.parseTrades(a.completeOrders,r,t,i)}async createOrder(e,i,s,r,a,o={}){if("limit"!==i)throw new t(this.id+" allows limit orders only");await this.loadMarkets();let d={price:a,currency:this.marketId(e),qty:r},c="privatePostOrder"+this.capitalize(i)+this.capitalize(s),n=await this[c](this.extend(d,o)),l=this.safeString(n,"orderId"),h=this.milliseconds(),u=a*r,m={info:n,id:l,timestamp:h,datetime:this.iso8601(h),lastTradeTimestamp:void 0,symbol:e,type:i,side:s,price:a,cost:u,average:void 0,amount:r,filled:void 0,remaining:void 0,status:void 0,fee:void 0};return this.orders[l]=m,m}async cancelOrder(e,t,i={}){let r=this.safeValue(this.orders,e),a=void 0,o=void 0,d=void 0;if(void 0===r){if(void 0===(o=this.safeFloat(i,"price")))throw new s(this.id+" cancelOrder could not find the order id "+e+" in orders cache. The order was probably created with a different instance of this class earlier. The price parameter is missing. To cancel the order, pass {'price': 12345, 'qty': 1.2345, 'is_ask': 0} in the params argument of cancelOrder.");if(void 0===(a=this.safeFloat(i,"qty")))throw new s(this.id+" cancelOrder could not find the order id "+e+" in orders cache. The order was probably created with a different instance of this class earlier. The `qty` (amount) parameter is missing. To cancel the order, pass {'price': 12345, 'qty': 1.2345, 'is_ask': 0} in the params argument of cancelOrder.");if(void 0===(d=this.safeFloat(i,"is_ask")))throw new s(this.id+" cancelOrder could not find the order id "+e+" in orders cache. The order was probably created with a different instance of this class earlier. The `is_ask` (side) parameter is missing. To cancel the order, pass {'price': 12345, 'qty': 1.2345, 'is_ask': 0} in the params argument of cancelOrder.")}else o=r.price,a=r.amount,d="buy"===r.side?0:1;let c={order_id:e,price:o,qty:a,is_ask:d};return await this.privatePostOrderCancel(this.extend(c,i))}sign(e,t="public",i="GET",s={},r,a){let o=this.implodeParams(e,s),d=this.omit(s,this.extractParams(e)),c=this.urls.api+"/";if("public"===t)c+=o,Object.keys(d).length&&(c+="?"+this.urlencode(d));else{this.checkRequiredCredentials(),c+=this.version+"/"+o;let e=this.nonce().toString(),t=this.json(this.extend({access_token:this.apiKey,nonce:e},s)),i=this.stringToBase64(this.encode(t));a=this.decode(i);let d=this.secret.toUpperCase();r={"content-type":"application/json","X-COINONE-PAYLOAD":i,"X-COINONE-SIGNATURE":this.hmac(i,this.encode(d),"sha512")}}return{url:c,method:i,body:a,headers:r}}handleErrors(e,i,s,r,a,o){if("{"===o[0]||"["===o[0]){let e=JSON.parse(o);if(!("result"in e))throw new t(this.id+" "+o);if("success"!==e.result){const i=this.safeString(e,"errorCode"),s=this.id+" "+this.json(e),r=this.exceptions;throw i in r?new r[i](s):new t(s)}}}};
//# sourceMappingURL=coinone.js.map