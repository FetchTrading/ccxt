"use strict";const e=require("./base/Exchange"),{ExchangeError:t,AuthenticationError:i,InvalidNonce:s,InsufficientFunds:a,OrderNotFound:r,DDoSProtection:o}=require("./base/errors");module.exports=class extends e{describe(){return this.deepExtend(super.describe(),{id:"bitz",name:"Bit-Z",countries:"HK",rateLimit:1e3,version:"v1",userAgent:this.userAgents.chrome,has:{fetchTickers:!0,fetchOHLCV:!0,fetchOpenOrders:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","1d":"1d"},urls:{logo:"https://user-images.githubusercontent.com/1294454/35862606-4f554f14-0b5d-11e8-957d-35058c504b6f.jpg",api:"https://www.bit-z.com/api_v1",www:"https://www.bit-z.com",doc:"https://www.bit-z.com/api.html",fees:"https://www.bit-z.com/about/fee"},api:{public:{get:["ticker","tickerall","depth","orders","kline"]},private:{post:["balances","tradeAdd","tradeCancel","openOrders"]}},fees:{trading:{maker:.001,taker:.001},funding:{withdraw:{BTC:"0.5%",DKKT:"0.5%",ETH:.01,USDT:"0.5%",LTC:"0.5%",FCT:"0.5%",LSK:"0.5%",HXI:"0.8%",ZEC:"0.5%",DOGE:"0.5%",MZC:"0.5%",ETC:"0.5%",GXS:"0.5%",XPM:"0.5%",PPC:"0.5%",BLK:"0.5%",XAS:"0.5%",HSR:"0.5%",NULS:5,VOISE:350,PAY:1.5,EOS:.6,YBCT:35,OMG:.3,OTN:.4,BTX:"0.5%",QTUM:"0.5%",DASH:"0.5%",GAME:"0.5%",BCH:"0.5%",GNT:9,SSS:1500,ARK:"0.5%",PART:"0.5%",LEO:"0.5%",DGB:"0.5%",ZSC:130,VIU:350,BTG:"0.5%",ARN:10,VTC:"0.5%",BCD:"0.5%",TRX:200,HWC:"0.5%",UNIT:"0.5%",OXY:"0.5%",MCO:.35,SBTC:"0.5%",BCX:"0.5%",ETF:"0.5%",PYLNT:.4,XRB:"0.5%",ETP:"0.5%"}}},precision:{amount:8,price:8},options:{lastNonceTimestamp:0},commonCurrencies:{PXC:"Pixiecoin"}})}async fetchMarkets(){let e=(await this.publicGetTickerall()).data,t=Object.keys(e),i=[];for(let s=0;s<t.length;s++){let a=t[s],r=e[a],[o,d]=a.split("_"),n=o.toUpperCase(),h=d.toUpperCase(),c=(n=this.commonCurrencyCode(n))+"/"+(h=this.commonCurrencyCode(h));i.push({id:a,symbol:c,base:n,quote:h,baseId:o,quoteId:d,active:!0,info:r})}return i}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostBalances(e),i=t.data,s=this.omit(i,"uid"),a={info:t},r=Object.keys(s);for(let e=0;e<r.length;e++){let t=r[e];if(!(t.indexOf("_")>=0)){let e=t.toUpperCase();t in this.currencies_by_id&&(e=this.currencies_by_id[t].code);let i=this.account(),r=t+"_lock";i.used=this.safeFloat(s,r),i.total=this.safeFloat(s,t),i.free=i.total-i.used,a[e]=i}}return this.parseBalance(a)}parseTicker(e,t){let i=1e3*e.date,s=t.symbol,a=this.safeFloat(e,"last");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"buy"),bidVolume:void 0,ask:this.safeFloat(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"vol"),quoteVolume:void 0,info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetTicker(this.extend({coin:i.id},t));return this.parseTicker(s.data,i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=(await this.publicGetTickerall(t)).data,s={},a=Object.keys(i);for(let e=0;e<a.length;e++){let t=a[e],r=this.markets_by_id[t];s[r.symbol]=this.parseTicker(i[t],r)}return s}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=(await this.publicGetDepth(this.extend({coin:this.marketId(e)},i))).data,a=1e3*s.date;return this.parseOrderBook(s,a)}parseTrade(e,t){let i=this.sum(this.milliseconds(),288e5),s=this.iso8601(i);s=(s=s.split("T"))[0]+" "+e.t+"+08";let a=this.parse8601(s),r=this.safeFloat(e,"p"),o=this.safeFloat(e,"n"),d=t.symbol,n=this.priceToPrecision(d,o*r);return{timestamp:a,datetime:this.iso8601(a),symbol:d,id:void 0,order:void 0,type:"limit",side:e.s,price:r,amount:o,cost:n,fee:void 0,info:e}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let a=this.market(e),r=(await this.publicGetOrders(this.extend({coin:a.id},s))).data.d;return this.parseTrades(r,a,t,i)}async fetchOHLCV(e,t="1m",i,s,a={}){await this.loadMarkets();let r=this.market(e),o=await this.publicGetKline(this.extend({coin:r.id,type:this.timeframes[t]},a)),d=JSON.parse(o.data.datas.data);return this.parseOHLCVs(d,r,t,i,s)}parseOrder(e,t){let i=void 0;void 0!==t&&(i=t.symbol);let s=this.safeString(e,"side");void 0===s&&(void 0!==(s=this.safeString(e,"type"))&&(s="in"===s?"buy":"sell"),void 0===s&&(s=this.safeString(e,"flag")));let a=this.safeFloat(e,"number"),r=this.safeFloat(e,"numberover"),o=void 0;void 0!==a&&void 0!==r&&(o=a-r);let d=void 0,n=void 0;return"datetime"in e&&(d=this.parse8601(e.datetime),n=this.iso8601(d)),{id:e.id,datetime:n,timestamp:d,lastTradeTimestamp:void 0,status:"open",symbol:i,type:"limit",side:s,price:e.price,cost:void 0,amount:e.number,filled:o,remaining:r,trades:void 0,fee:void 0,info:e}}async createOrder(e,i,s,a,r,o={}){await this.loadMarkets();let d=this.market(e),n="buy"===s?"in":"out";if(!this.password)throw new t(this.id+' createOrder() requires you to set exchange.password = "YOUR_TRADING_PASSWORD" (a trade password is NOT THE SAME as your login password)');let h={coin:d.id,type:n,price:this.priceToPrecision(e,r),number:this.amountToString(e,a),tradepwd:this.password},c=(await this.privatePostTradeAdd(this.extend(h,o))).data.id,l=this.parseOrder({id:c,price:r,number:a,side:s},d);return this.orders[c]=l,l}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.privatePostTradeCancel(this.extend({id:e},i))}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let a=this.market(e),r=await this.privatePostOpenOrders(this.extend({coin:a.id},s));return this.parseOrders(r.data,a,t,i)}nonce(){let e=this.seconds();return e>this.options.lastNonceTimestamp&&(this.options.lastNonceTimestamp=e,this.options.lastNonce=1e5),this.options.lastNonce=this.sum(this.options.lastNonce,1),this.options.lastNonce}sign(e,t="public",i="GET",s={},a,r){let o=this.urls.api+"/"+e,d=void 0;return"public"===t?(d=this.urlencode(s)).length&&(o+="?"+d):(this.checkRequiredCredentials(),r=this.urlencode(this.keysort(this.extend({api_key:this.apiKey,timestamp:this.seconds(),nonce:this.nonce()},s))),r+="&sign="+this.hash(this.encode(r+this.secret)),a={"Content-type":"application/x-www-form-urlencoded"}),{url:o,method:i,body:r,headers:a}}async request(e,d="public",n="GET",h={},c,l){let p=await this.fetch2(e,d,n,h,c,l),m=this.safeString(p,"code");if("0"!==m){throw new(this.safeValue({103:i,104:i,200:i,202:i,401:i,406:i,203:s,201:r,408:a,106:o},m,t))(this.safeString(p,"msg","Error"))}return p}};
//# sourceMappingURL=bitz.js.map