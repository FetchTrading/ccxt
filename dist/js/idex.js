"use strict";const e=require("./base/Exchange");module.exports=class extends e{describe(){return this.deepExtend(super.describe(),{id:"idex",name:"IDEX",countries:"US",rateLimit:1e3,urls:{logo:"https://storage.googleapis.com/fetch-logos/IDEX_sf-color.svg",api:"https://api.idex.market",www:"https://idex.market",doc:["https://github.com/AuroraDAO/idex-api-docs"]},has:{createOrder:!1,createMarketOrder:!1,createLimitOrder:!1,fetchBalance:!1,fetchCurrencies:!0,fetchL2OrderBook:!1,fetchMarkets:!0,fetchOHLCV:!1,fetchTicker:!1,fetchTrades:!1,privateAPI:!1},api:{public:{post:["returnCurrencies","returnOrderBook","returnTicker"]}}})}sign(e,t="public",r="POST",s={},a,i={}){return a={"Content-Type":"application/json"},{url:`${this.urls.api}/${e}`,method:r,body:JSON.stringify(s),headers:a}}async fetchCurrencies(e={}){const t=await this.publicPostReturnCurrencies(),r=Object.keys(t),s=new Array(r.length);for(let e=0,a=r.length;e<a;e++){const a=r[e],i=t[a];s[e]={id:a,code:a,info:i,name:i.name,active:!0,status:"ok",precision:i.decimals}}return s}async fetchMarkets(){const e=await this.publicPostReturnTicker(),t=Object.keys(e),r=new Array(t.length);for(let s=0,a=t.length;s<a;s++){const a=t[s],[i,o]=a.split("_");r[s]={id:a,symbol:`${o}/${i}`,base:o,quote:i,active:!0,info:e[a]}}return r}async fetchOrderBook(e,t,r={}){await this.loadMarkets();const[s,a]=e.split("/"),i=await this.publicPostReturnOrderBook({market:`${a}_${s}`}),{bids:o,asks:n}=i,c=new Array(o.length);for(let e=0,t=o.length;e<t;e++){const t=o[e];c[e]=[parseFloat(t.price),parseFloat(t.amount),t]}const l=new Array(n.length);for(let e=0,t=n.length;e<t;e++){const t=n[e];l[e]=[parseFloat(t.price),parseFloat(t.amount),t]}const h=new Date;return{timestamp:h.getTime(),datetime:h.toISOString(),nonce:void 0,bids:c,asks:l}}};
//# sourceMappingURL=idex.js.map