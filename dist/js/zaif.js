"use strict";const e=require("./base/Exchange"),{ExchangeError:t}=require("./base/errors");module.exports=class extends e{describe(){return this.deepExtend(super.describe(),{id:"zaif",name:"Zaif",countries:"JP",rateLimit:2e3,version:"1",has:{CORS:!1,createMarketOrder:!1,fetchOpenOrders:!0,fetchClosedOrders:!0,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766927-39ca2ada-5eeb-11e7-972f-1b4199518ca6.jpg",api:"https://api.zaif.jp",www:"https://zaif.jp",doc:["http://techbureau-api-document.readthedocs.io/ja/latest/index.html","https://corp.zaif.jp/api-docs","https://corp.zaif.jp/api-docs/api_links","https://www.npmjs.com/package/zaif.jp","https://github.com/you21979/node-zaif"],fees:"https://zaif.jp/fee?lang=en"},fees:{trading:{percentage:!0,taker:-1e-4,maker:-5e-4}},api:{public:{get:["depth/{pair}","currencies/{pair}","currencies/all","currency_pairs/{pair}","currency_pairs/all","last_price/{pair}","ticker/{pair}","trades/{pair}"]},private:{post:["active_orders","cancel_order","deposit_history","get_id_info","get_info","get_info2","get_personal_info","trade","trade_history","withdraw","withdraw_history"]},ecapi:{post:["createInvoice","getInvoice","getInvoiceIdsByOrderNumber","cancelInvoice"]},tlapi:{post:["get_positions","position_history","active_positions","create_position","change_position","cancel_position"]},fapi:{get:["groups/{group_id}","last_price/{group_id}/{pair}","ticker/{group_id}/{pair}","trades/{group_id}/{pair}","depth/{group_id}/{pair}"]}}})}async fetchMarkets(){let e=await this.publicGetCurrencyPairsAll(),t=[];for(let i=0;i<e.length;i++){let r=e[i],a=r.currency_pair,s=r.name,[o,n]=s.split("/"),d={amount:-Math.log10(r.item_unit_step),price:r.aux_unit_point};t.push({id:a,symbol:s,base:o,quote:n,active:!0,precision:d,limits:{amount:{min:this.safeFloat(r,"item_unit_min"),max:void 0},price:{min:this.safeFloat(r,"aux_unit_min"),max:void 0},cost:{min:void 0,max:void 0}},info:r})}return t}async fetchBalance(e={}){await this.loadMarkets();let t=(await this.privatePostGetInfo()).return,i={info:t},r=Object.keys(t.funds);for(let e=0;e<r.length;e++){let a=r[e],s=t.funds[a],o=a.toUpperCase(),n={free:s,used:0,total:s};"deposit"in t&&a in t.deposit&&(n.total=t.deposit[a],n.used=n.total-n.free),i[o]=n}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let r=await this.publicGetDepthPair(this.extend({pair:this.marketId(e)},i));return this.parseOrderBook(r)}async fetchTicker(e,t={}){await this.loadMarkets();let i=await this.publicGetTickerPair(this.extend({pair:this.marketId(e)},t)),r=this.milliseconds(),a=i.vwap,s=i.volume,o=s*a,n=i.last;return{symbol:e,timestamp:r,datetime:this.iso8601(r),high:i.high,low:i.low,bid:i.bid,bidVolume:void 0,ask:i.ask,askVolume:void 0,vwap:a,open:void 0,close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:s,quoteVolume:o,info:i}}parseTrade(e,t){let i="bid"===e.trade_type?"buy":"sell",r=1e3*e.date,a=this.safeString(e,"id");return a=this.safeString(e,"tid",a),t||(t=this.markets_by_id[e.currency_pair]),{id:a.toString(),info:e,timestamp:r,datetime:this.iso8601(r),symbol:t.symbol,type:void 0,side:i,price:e.price,amount:e.amount}}async fetchTrades(e,t,i,r={}){await this.loadMarkets();let a=this.market(e),s=await this.publicGetTradesPair(this.extend({pair:a.id},r));return this.parseTrades(s,a,t,i)}async createOrder(e,i,r,a,s,o={}){if(await this.loadMarkets(),"market"===i)throw new t(this.id+" allows limit orders only");let n=await this.privatePostTrade(this.extend({currency_pair:this.marketId(e),action:"buy"===r?"bid":"ask",amount:a,price:s},o));return{info:n,id:n.return.order_id.toString()}}async cancelOrder(e,t,i={}){return await this.privatePostCancelOrder(this.extend({order_id:e},i))}parseOrder(e,t){let i="bid"===e.action?"buy":"sell",r=1e3*parseInt(e.timestamp);t||(t=this.markets_by_id[e.currency_pair]);let a=e.price,s=e.amount;return{id:e.id.toString(),timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,status:"open",symbol:t.symbol,type:"limit",side:i,price:a,cost:a*s,amount:s,filled:void 0,remaining:void 0,trades:void 0,fee:void 0}}parseOrders(e,t,i,r){let a=Object.keys(e),s=[];for(let i=0;i<a.length;i++){let r=a[i],o=e[r],n=this.extend(o,{id:r});s.push(this.parseOrder(n,t))}return this.filterBySinceLimit(s,i,r)}async fetchOpenOrders(e,t,i,r={}){await this.loadMarkets();let a=void 0,s={};e&&(a=this.market(e),s.currency_pair=a.id);let o=await this.privatePostActiveOrders(this.extend(s,r));return this.parseOrders(o.return,a,t,i)}async fetchClosedOrders(e,t,i,r={}){await this.loadMarkets();let a=void 0,s={};e&&(a=this.market(e),s.currency_pair=a.id);let o=await this.privatePostTradeHistory(this.extend(s,r));return this.parseOrders(o.return,a,t,i)}async withdraw(e,i,r,a,s={}){if(this.checkAddress(r),await this.loadMarkets(),"JPY"===e)throw new t(this.id+" does not allow "+e+" withdrawals");let o=await this.privatePostWithdraw(this.extend({currency:e,amount:i,address:r},s));return{info:o,id:o.return.txid,fee:o.return.fee}}nonce(){return parseFloat(this.milliseconds()/1e3).toFixed(8)}sign(e,t="public",i="GET",r={},a,s){let o=this.urls.api+"/";if("public"===t)o+="api/"+this.version+"/"+this.implodeParams(e,r);else if("fapi"===t)o+="fapi/"+this.version+"/"+this.implodeParams(e,r);else{this.checkRequiredCredentials(),o+="ecapi"===t?"ecapi":"tlapi"===t?"tlapi":"tapi";let i=this.nonce();s=this.urlencode(this.extend({method:e,nonce:i},r)),a={"Content-Type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:this.hmac(this.encode(s),this.encode(this.secret),"sha512")}}return{url:o,method:i,body:s,headers:a}}async request(e,i="api",r="GET",a={},s,o){let n=await this.fetch2(e,i,r,a,s,o);if("error"in n)throw new t(this.id+" "+n.error);if("success"in n&&!n.success)throw new t(this.id+" "+this.json(n));return n}};
//# sourceMappingURL=zaif.js.map