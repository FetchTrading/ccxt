"use strict";const e=require("./base/Exchange"),{ExchangeError:a,NotSupported:i}=require("./base/errors");module.exports=class extends e{describe(){return this.deepExtend(super.describe(),{id:"coinsecure",name:"Coinsecure",countries:"IN",rateLimit:1e3,version:"v1",has:{CORS:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766472-9cbd200a-5ed9-11e7-9551-2267ad7bac08.jpg",api:"https://api.coinsecure.in",www:"https://coinsecure.in",doc:["https://api.coinsecure.in","https://github.com/coinsecure/plugins"]},requiredCredentials:{apiKey:!0,secret:!1},api:{public:{get:["bitcoin/search/confirmation/{txid}","exchange/ask/low","exchange/ask/orders","exchange/bid/high","exchange/bid/orders","exchange/lastTrade","exchange/max24Hr","exchange/min24Hr","exchange/ticker","exchange/trades"]},private:{get:["mfa/authy/call","mfa/authy/sms","netki/search/{netkiName}","user/bank/otp/{number}","user/kyc/otp/{number}","user/profile/phone/otp/{number}","user/wallet/coin/address/{id}","user/wallet/coin/deposit/confirmed/all","user/wallet/coin/deposit/confirmed/{id}","user/wallet/coin/deposit/unconfirmed/all","user/wallet/coin/deposit/unconfirmed/{id}","user/wallet/coin/wallets","user/exchange/bank/fiat/accounts","user/exchange/bank/fiat/balance/available","user/exchange/bank/fiat/balance/pending","user/exchange/bank/fiat/balance/total","user/exchange/bank/fiat/deposit/cancelled","user/exchange/bank/fiat/deposit/unverified","user/exchange/bank/fiat/deposit/verified","user/exchange/bank/fiat/withdraw/cancelled","user/exchange/bank/fiat/withdraw/completed","user/exchange/bank/fiat/withdraw/unverified","user/exchange/bank/fiat/withdraw/verified","user/exchange/ask/cancelled","user/exchange/ask/completed","user/exchange/ask/pending","user/exchange/bid/cancelled","user/exchange/bid/completed","user/exchange/bid/pending","user/exchange/bank/coin/addresses","user/exchange/bank/coin/balance/available","user/exchange/bank/coin/balance/pending","user/exchange/bank/coin/balance/total","user/exchange/bank/coin/deposit/cancelled","user/exchange/bank/coin/deposit/unverified","user/exchange/bank/coin/deposit/verified","user/exchange/bank/coin/withdraw/cancelled","user/exchange/bank/coin/withdraw/completed","user/exchange/bank/coin/withdraw/unverified","user/exchange/bank/coin/withdraw/verified","user/exchange/bank/summary","user/exchange/coin/fee","user/exchange/fiat/fee","user/exchange/kycs","user/exchange/referral/coin/paid","user/exchange/referral/coin/successful","user/exchange/referral/fiat/paid","user/exchange/referrals","user/exchange/trade/summary","user/login/token/{token}","user/summary","user/wallet/summary","wallet/coin/withdraw/cancelled","wallet/coin/withdraw/completed","wallet/coin/withdraw/unverified","wallet/coin/withdraw/verified"],post:["login","login/initiate","login/password/forgot","mfa/authy/initiate","mfa/ga/initiate","signup","user/netki/update","user/profile/image/update","user/exchange/bank/coin/withdraw/initiate","user/exchange/bank/coin/withdraw/newVerifycode","user/exchange/bank/fiat/withdraw/initiate","user/exchange/bank/fiat/withdraw/newVerifycode","user/password/change","user/password/reset","user/wallet/coin/withdraw/initiate","wallet/coin/withdraw/newVerifycode"],put:["signup/verify/{token}","user/exchange/kyc","user/exchange/bank/fiat/deposit/new","user/exchange/ask/new","user/exchange/bid/new","user/exchange/instant/buy","user/exchange/instant/sell","user/exchange/bank/coin/withdraw/verify","user/exchange/bank/fiat/account/new","user/exchange/bank/fiat/withdraw/verify","user/mfa/authy/initiate/enable","user/mfa/ga/initiate/enable","user/netki/create","user/profile/phone/new","user/wallet/coin/address/new","user/wallet/coin/new","user/wallet/coin/withdraw/sendToExchange","user/wallet/coin/withdraw/verify"],delete:["user/gcm/{code}","user/logout","user/exchange/bank/coin/withdraw/unverified/cancel/{withdrawID}","user/exchange/bank/fiat/deposit/cancel/{depositID}","user/exchange/ask/cancel/{orderID}","user/exchange/bid/cancel/{orderID}","user/exchange/bank/fiat/withdraw/unverified/cancel/{withdrawID}","user/mfa/authy/disable/{code}","user/mfa/ga/disable/{code}","user/profile/phone/delete","user/profile/image/delete/{netkiName}","user/wallet/coin/withdraw/unverified/cancel/{withdrawID}"]}},markets:{"BTC/INR":{id:"BTC/INR",symbol:"BTC/INR",base:"BTC",quote:"INR"}},fees:{trading:{maker:.004,taker:.004}}})}async fetchBalance(e={}){await this.loadMarkets();let a=(await this.privateGetUserExchangeBankSummary()).message,i={info:a,BTC:{free:a.availableCoinBalance,used:a.pendingCoinBalance,total:a.totalCoinBalance},INR:{free:a.availableFiatBalance,used:a.pendingFiatBalance,total:a.totalFiatBalance}};return this.parseBalance(i)}async fetchOrderBook(e,a,i={}){await this.loadMarkets();let t=await this.publicGetExchangeBidOrders(i),s=await this.publicGetExchangeAskOrders(i),n={bids:t.message,asks:s.message};return this.parseOrderBook(n,void 0,"bids","asks","rate","vol")}async fetchTicker(e,a={}){await this.loadMarkets();let i=(await this.publicGetExchangeTicker(a)).message,t=i.timestamp,s=this.safeFloat(i,"coinvolume");if("BTC/INR"===e){s*=1e-8}let n=this.safeFloat(i,"fiatvolume")/100,r=n/s,c=this.safeFloat(i,"lastPrice")/100;return{symbol:e,timestamp:t,datetime:this.iso8601(t),high:this.safeFloat(i,"high")/100,low:this.safeFloat(i,"low")/100,bid:this.safeFloat(i,"bid")/100,bidVolume:void 0,ask:this.safeFloat(i,"ask")/100,askVolume:void 0,vwap:r,open:this.safeFloat(i,"open")/100,close:c,last:c,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:s,quoteVolume:n,info:i}}parseTrade(e,a){let i=e.time,t="bid"===e.ordType?"buy":"sell";return{id:void 0,timestamp:i,datetime:this.iso8601(i),order:void 0,symbol:a,type:void 0,side:t,price:this.safeFloat(e,"rate")/100,amount:this.safeFloat(e,"vol")/1e8,fee:void 0,info:e}}async fetchTrades(e,a,i,t={}){await this.loadMarkets();let s=this.market(e),n=await this.publicGetExchangeTrades(t);if("message"in n){let e=n.message;return this.parseTrades(e,s)}}async createOrder(e,a,i,t,s,n={}){await this.loadMarkets();let r="privatePutUserExchange",c={};if("market"===a)r+="Instant"+this.capitalize(i),"buy"===i?c.maxFiat=t:c.maxVol=t;else{r+=("buy"===i?"Bid":"Ask")+"New",c.rate=s,c.vol=t}let o=await this[r](this.extend(c,n));return{info:o,id:o.message.orderID}}async cancelOrder(e,a,t={}){throw await this.loadMarkets(),new i(this.id+" cancelOrder () is not fully implemented yet")}sign(e,a="public",i="GET",t={},s,n){let r=this.urls.api+"/"+this.version+"/"+this.implodeParams(e,t),c=this.omit(t,this.extractParams(e));return"private"===a&&(this.checkRequiredCredentials(),s={Authorization:this.apiKey},Object.keys(c).length&&(n=this.json(c),s["Content-Type"]="application/json")),{url:r,method:i,body:n,headers:s}}handleErrors(e,i,t,s,n,r){if(200===e){if("{"!==r[0]&&"["!==r[0])throw new a(this.id+" returned a non-JSON reply: "+r);{let e=JSON.parse(r);if(!("success"in e))throw new a(this.id+' malformed response: no "success" in response: '+r);if(!e.success)throw new a(this.id+" error returned: "+r);if(!("message"in e))throw new a(this.id+' malformed response: no "message" in response: '+r)}}}};
//# sourceMappingURL=coinsecure.js.map