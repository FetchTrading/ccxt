"use strict";const e=require("./base/Exchange");let{ExchangeError:t}=require("./base/errors");module.exports=class extends e{describe(){return this.deepExtend(super.describe(),{id:"southxchange",name:"SouthXchange",countries:"AR",rateLimit:1e3,has:{CORS:!0,createDepositAddress:!0,fetchOpenOrders:!0,fetchTickers:!0,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27838912-4f94ec8a-60f6-11e7-9e5d-bbf9bd50a559.jpg",api:"https://www.southxchange.com/api",www:"https://www.southxchange.com",doc:"https://www.southxchange.com/Home/Api"},api:{public:{get:["markets","price/{symbol}","prices","book/{symbol}","trades/{symbol}"]},private:{post:["cancelMarketOrders","cancelOrder","generatenewaddress","listOrders","listBalances","placeOrder","withdraw"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:.002,taker:.002}},commonCurrencies:{SMT:"SmartNode",MTC:"Marinecoin"}})}async fetchMarkets(){let e=await this.publicGetMarkets(),t=[];for(let s=0;s<e.length;s++){let i=e[s],r=i[0],a=i[1],o=this.commonCurrencyCode(r),d=this.commonCurrencyCode(a),n=o+"/"+d,c=n;t.push({id:c,symbol:n,base:o,quote:d,baseId:r,quoteId:a,info:i})}return t}async fetchBalance(e={}){await this.loadMarkets();let s=await this.privatePostListBalances();if(!s)throw new t(this.id+" fetchBalance got an unrecognized response");let i={info:s};for(let e=0;e<s.length;e++){let t=s[e],r=t.Currency.toUpperCase(),a=this.currencies_by_id[r].code,o=parseFloat(t.Available),d=parseFloat(t.Deposited),n=parseFloat(t.Unconfirmed),c=this.sum(d,n),h={free:o,used:c-o,total:c};i[a]=h}return this.parseBalance(i)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();let i=await this.publicGetBookSymbol(this.extend({symbol:this.marketId(e)},s));return this.parseOrderBook(i,void 0,"BuyOrders","SellOrders","Price","Amount")}parseTicker(e,t){let s=this.milliseconds(),i=void 0;t&&(i=t.symbol);let r=this.safeFloat(e,"Last");return{symbol:i,timestamp:s,datetime:this.iso8601(s),high:void 0,low:void 0,bid:this.safeFloat(e,"Bid"),bidVolume:void 0,ask:this.safeFloat(e,"Ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:this.safeFloat(e,"Variation24Hr"),percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"Volume24Hr"),quoteVolume:void 0,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let s=await this.publicGetPrices(t),i=this.indexBy(s,"Market"),r=Object.keys(i),a={};for(let e=0;e<r.length;e++){let t=r[e],s=t,o=void 0;t in this.markets_by_id&&(s=(o=this.markets_by_id[t]).symbol);let d=i[t];a[s]=this.parseTicker(d,o)}return a}async fetchTicker(e,t={}){await this.loadMarkets();let s=this.market(e),i=await this.publicGetPriceSymbol(this.extend({symbol:s.id},t));return this.parseTicker(i,s)}parseTrade(e,t){let s=1e3*e.At;return{info:e,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,id:void 0,order:void 0,type:void 0,side:e.Type,price:e.Price,amount:e.Amount}}async fetchTrades(e,t,s,i={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetTradesSymbol(this.extend({symbol:r.id},i));return this.parseTrades(a,r,t,s)}parseOrder(e,t){let s=e.ListingCurrency+"/"+e.ReferenceCurrency,i=this.safeFloat(e,"LimitPrice"),r=this.safeFloat(e,"OriginalAmount"),a=this.safeFloat(e,"Amount"),o=void 0,d=void 0;void 0!==r&&(d=i*r,void 0!==a&&(o=r-a));let n=e.Type.toLowerCase();return{info:e,id:e.Code.toString(),timestamp:void 0,datetime:this.iso8601(void 0),lastTradeTimestamp:void 0,symbol:s,type:"limit",side:n,price:i,amount:r,cost:d,filled:o,remaining:a,status:"open",fee:void 0}}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets();let r=void 0;void 0!==e&&(r=this.market(e));let a=await this.privatePostListOrders();return this.parseOrders(a,r,t,s)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();let o=this.market(e),d={listingCurrency:o.base,referenceCurrency:o.quote,type:s,amount:i};"limit"===t&&(d.limitPrice=r);let n=await this.privatePostPlaceOrder(this.extend(d,a));return{info:n,id:n.toString()}}async cancelOrder(e,t,s={}){return await this.loadMarkets(),await this.privatePostCancelOrder(this.extend({orderCode:e},s))}async createDepositAddress(e,t={}){await this.loadMarkets();let s=this.currency(e),i=await this.privatePostGeneratenewaddress(this.extend({currency:s.id},t)),r=i.split("|"),a=r.length,o=r[0];this.checkAddress(o);let d=void 0;return a>1&&(d=r[1]),{currency:e,address:o,tag:d,status:"ok",info:i}}async withdraw(e,t,s,i,r={}){this.checkAddress(s);let a={currency:e,address:s,amount:t};return void 0!==i&&(a.address=s+"|"+i),{info:await this.privatePostWithdraw(this.extend(a,r)),id:void 0}}sign(e,t="public",s="GET",i={},r,a){let o=this.urls.api+"/"+this.implodeParams(e,i),d=this.omit(i,this.extractParams(e));if("private"===t){this.checkRequiredCredentials();let e=this.nonce();d=this.extend({key:this.apiKey,nonce:e},d),a=this.json(d),r={"Content-Type":"application/json",Hash:this.hmac(this.encode(a),this.encode(this.secret),"sha512")}}return{url:o,method:s,body:a,headers:r}}};
//# sourceMappingURL=southxchange.js.map