"use strict";const e=require("./base/Exchange"),{ExchangeError:t}=require("./base/errors");module.exports=class extends e{describe(){return this.deepExtend(super.describe(),{id:"bithumb",name:"Bithumb",countries:"KR",rateLimit:500,has:{CORS:!0,fetchTickers:!0,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/30597177-ea800172-9d5e-11e7-804c-b9d4fa9b56b0.jpg",api:{public:"https://api.bithumb.com/public",private:"https://api.bithumb.com"},www:"https://www.bithumb.com",doc:"https://www.bithumb.com/u1/US127"},api:{public:{get:["ticker/{currency}","ticker/all","orderbook/{currency}","orderbook/all","transaction_history/{currency}","transaction_history/all"]},private:{post:["info/account","info/balance","info/wallet_address","info/ticker","info/orders","info/user_transactions","trade/place","info/order_detail","trade/cancel","trade/btc_withdrawal","trade/krw_deposit","trade/krw_withdrawal","trade/market_buy","trade/market_sell"]}},fees:{trading:{maker:.0015,taker:.0015}},exceptions:{5100:t}})}async fetchMarkets(){let e=await this.publicGetTickerAll(),t=Object.keys(e.data),i=[];for(let a=0;a<t.length;a++){let r=t[a];if("date"!==r){let t=e.data[r],a=r,s="KRW",o=r+"/"+s;i.push({id:r,symbol:o,base:a,quote:s,info:t,lot:void 0,active:!0,precision:{amount:void 0,price:void 0},limits:{amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}}})}}return i}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostInfoBalance(this.extend({currency:"ALL"},e)),i={info:t},a=t.data,r=Object.keys(this.currencies);for(let e=0;e<r.length;e++){let t=r[e],s=this.account(),o=t.toLowerCase();s.total=this.safeFloat(a,"total_"+o),s.used=this.safeFloat(a,"in_use_"+o),s.free=this.safeFloat(a,"available_"+o),i[t]=s}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let a={currency:this.market(e).base};void 0!==t&&(a.count=t);let r=(await this.publicGetOrderbookCurrency(this.extend(a,i))).data,s=parseInt(r.timestamp);return this.parseOrderBook(r,s,"bids","asks","price","quantity")}parseTicker(e,t){let i=parseInt(e.date),a=void 0;t&&(a=t.symbol);let r=this.safeFloat(e,"opening_price"),s=this.safeFloat(e,"closing_price"),o=s-r,n=this.safeFloat(e,"average_price"),c=this.safeFloat(e,"volume_1day");return{symbol:a,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"max_price"),low:this.safeFloat(e,"min_price"),bid:this.safeFloat(e,"buy_price"),bidVolume:void 0,ask:this.safeFloat(e,"sell_price"),askVolume:void 0,vwap:n,open:r,close:s,last:s,previousClose:void 0,change:o,percentage:o/r*100,average:this.sum(r,s)/2,baseVolume:c,quoteVolume:c*n,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTickerAll(t),a={},r=i.data.date,s=this.omit(i.data,"date"),o=Object.keys(s);for(let e=0;e<o.length;e++){let t=o[e],i=t,n=void 0;t in this.markets_by_id&&(i=(n=this.markets_by_id[t]).symbol);let c=s[t];c.date=r,a[i]=this.parseTicker(c,n)}return a}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),a=await this.publicGetTickerCurrency(this.extend({currency:i.base},t));return this.parseTicker(a.data,i)}parseTrade(e,t){let[i,a]=e.transaction_date.split(" ");a.length<8&&(a="0"+a);let r=this.parse8601(i+" "+a);r-=324e5;let s="ask"===e.type?"sell":"buy";return{id:void 0,info:e,timestamp:r,datetime:this.iso8601(r),symbol:t.symbol,order:void 0,type:void 0,side:s,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"units_traded")}}async fetchTrades(e,t,i,a={}){await this.loadMarkets();let r=this.market(e),s=await this.publicGetTransactionHistoryCurrency(this.extend({currency:r.base,count:100},a));return this.parseTrades(s.data,r,t,i)}async createOrder(e,t,i,a,r,s={}){await this.loadMarkets();let o=this.market(e),n=void 0,c="privatePostTrade";"limit"===t?(n={order_currency:o.id,Payment_currency:o.quote,units:a,price:r,type:"buy"===i?"bid":"ask"},c+="Place"):"market"===t&&(n={currency:o.id,units:a},c+="Market"+this.capitalize(i));let d=await this[c](this.extend(n,s)),l=void 0;return"order_id"in d&&d.order_id&&(l=d.order_id.toString()),{info:d,id:l}}async cancelOrder(e,i,a={}){if(!("side"in a))throw new t(this.id+" cancelOrder requires a side parameter (sell or buy) and a currency parameter");if(!("currency"in a))throw new t(this.id+" cancelOrder requires a currency parameter");let r="buy"===a.side?"bid":"ask";return await this.privatePostTradeCancel({order_id:e,type:r,currency:a.currency})}async withdraw(e,i,a,r,s={}){this.checkAddress(a);let o={units:i,address:a,currency:e};if("XRP"===e||"XMR"===e){if(!("destination"in s))throw new t(this.id+" "+e+" withdraw requires an extra destination param")}return{info:await this.privatePostTradeBtcWithdrawal(this.extend(o,s)),id:void 0}}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",a={},r,s){let o="/"+this.implodeParams(e,a),n=this.urls.api[t]+o,c=this.omit(a,this.extractParams(e));if("public"===t)Object.keys(c).length&&(n+="?"+this.urlencode(c));else{this.checkRequiredCredentials(),s=this.urlencode(this.extend({endpoint:o},c));let e=this.nonce().toString(),t=o+"\0"+s+"\0"+e,i=this.hmac(this.encode(t),this.encode(this.secret),"sha512"),a=this.decode(this.stringToBase64(this.encode(i)));r={Accept:"application/json","Content-Type":"application/x-www-form-urlencoded","Api-Key":this.apiKey,"Api-Sign":a.toString(),"Api-Nonce":e}}return{url:n,method:i,body:s,headers:r}}handleErrors(e,i,a,r,s,o){if("string"==typeof o&&!(o.length<2||"{"!==o[0]&&"["!==o[0])){let e=JSON.parse(o);if("status"in e){let i=this.safeString(e,"status");if(void 0!==i){if("0000"===i)return;const a=this.id+" "+this.json(e),r=this.exceptions;throw i in r?new r[i](a):new t(a)}}}}async request(e,i="public",a="GET",r={},s,o){let n=await this.fetch2(e,i,a,r,s,o);if("status"in n){if("0000"===n.status)return n;throw new t(this.id+" "+this.json(n))}return n}};
//# sourceMappingURL=bithumb.js.map